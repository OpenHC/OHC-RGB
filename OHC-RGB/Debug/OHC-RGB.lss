
OHC-RGB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006e  00800100  0000114e  000011e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000114e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000112  0080016e  0080016e  00001250  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001250  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000250  00000000  00000000  000012ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002388  00000000  00000000  000014fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004d0  00000000  00000000  00003884  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000014f4  00000000  00000000  00003d54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000007a8  00000000  00000000  00005248  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000099c6  00000000  00000000  000059f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000024fb  00000000  00000000  0000f3b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000278  00000000  00000000  000118b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000b55  00000000  00000000  00011b29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
       2:	ad c3       	rjmp	.+1882   	; 0x75e <__vector_1>
       4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
       6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
       8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
       a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
       c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
       e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
      10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
      12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
      14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
      16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
      18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
      1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
      1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
      1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
      20:	9b c4       	rjmp	.+2358   	; 0x958 <__vector_16>
      22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
      24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
      26:	0a c1       	rjmp	.+532    	; 0x23c <__vector_19>
      28:	b2 c0       	rjmp	.+356    	; 0x18e <__vector_20>
      2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
      2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
      2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
      30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
      32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
      34:	11 24       	eor	r1, r1
      36:	1f be       	out	0x3f, r1	; 63
      38:	cf ef       	ldi	r28, 0xFF	; 255
      3a:	d4 e0       	ldi	r29, 0x04	; 4
      3c:	de bf       	out	0x3e, r29	; 62
      3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
      40:	11 e0       	ldi	r17, 0x01	; 1
      42:	a0 e0       	ldi	r26, 0x00	; 0
      44:	b1 e0       	ldi	r27, 0x01	; 1
      46:	ee e4       	ldi	r30, 0x4E	; 78
      48:	f1 e1       	ldi	r31, 0x11	; 17
      4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
      4c:	05 90       	lpm	r0, Z+
      4e:	0d 92       	st	X+, r0
      50:	ae 36       	cpi	r26, 0x6E	; 110
      52:	b1 07       	cpc	r27, r17
      54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
      56:	22 e0       	ldi	r18, 0x02	; 2
      58:	ae e6       	ldi	r26, 0x6E	; 110
      5a:	b1 e0       	ldi	r27, 0x01	; 1
      5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
      5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
      60:	a0 38       	cpi	r26, 0x80	; 128
      62:	b2 07       	cpc	r27, r18
      64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
      66:	d9 d3       	rcall	.+1970   	; 0x81a <main>
      68:	70 c8       	rjmp	.-3872   	; 0xfffff14a <__eeprom_end+0xff7ef14a>

0000006a <__bad_interrupt>:
      6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <uart_init>:
	memcpy(packptr, data + offset, length);
	NRF24L01_send_data(packet, WIRELESS_PACK_LEN);
	free(packet);
	core_remote_NRF.sending = TRUE;
	return CORE_OK;
}
      6c:	89 e1       	ldi	r24, 0x19	; 25
      6e:	90 e0       	ldi	r25, 0x00	; 0
      70:	90 93 c5 00 	sts	0x00C5, r25
      74:	80 93 c4 00 	sts	0x00C4, r24
      78:	8e e0       	ldi	r24, 0x0E	; 14
      7a:	80 93 c2 00 	sts	0x00C2, r24
      7e:	08 95       	ret

00000080 <uart_init_tx>:
      80:	e1 ec       	ldi	r30, 0xC1	; 193
      82:	f0 e0       	ldi	r31, 0x00	; 0
      84:	80 81       	ld	r24, Z
      86:	88 64       	ori	r24, 0x48	; 72
      88:	80 83       	st	Z, r24
      8a:	08 95       	ret

0000008c <uart_send_byte>:
      8c:	e0 91 06 01 	lds	r30, 0x0106
      90:	f0 91 07 01 	lds	r31, 0x0107
      94:	81 93       	st	Z+, r24
      96:	82 e0       	ldi	r24, 0x02	; 2
      98:	e9 37       	cpi	r30, 0x79	; 121
      9a:	f8 07       	cpc	r31, r24
      9c:	10 f0       	brcs	.+4      	; 0xa2 <uart_send_byte+0x16>
      9e:	e9 e7       	ldi	r30, 0x79	; 121
      a0:	f1 e0       	ldi	r31, 0x01	; 1
      a2:	20 91 06 01 	lds	r18, 0x0106
      a6:	30 91 07 01 	lds	r19, 0x0107
      aa:	80 91 08 01 	lds	r24, 0x0108
      ae:	90 91 09 01 	lds	r25, 0x0109
      b2:	28 17       	cp	r18, r24
      b4:	39 07       	cpc	r19, r25
      b6:	29 f4       	brne	.+10     	; 0xc2 <uart_send_byte+0x36>
      b8:	a1 ec       	ldi	r26, 0xC1	; 193
      ba:	b0 e0       	ldi	r27, 0x00	; 0
      bc:	8c 91       	ld	r24, X
      be:	80 62       	ori	r24, 0x20	; 32
      c0:	8c 93       	st	X, r24
      c2:	f0 93 07 01 	sts	0x0107, r31
      c6:	e0 93 06 01 	sts	0x0106, r30
      ca:	80 91 75 01 	lds	r24, 0x0175
      ce:	90 91 76 01 	lds	r25, 0x0176
      d2:	a0 91 77 01 	lds	r26, 0x0177
      d6:	b0 91 78 01 	lds	r27, 0x0178
      da:	01 96       	adiw	r24, 0x01	; 1
      dc:	a1 1d       	adc	r26, r1
      de:	b1 1d       	adc	r27, r1
      e0:	80 93 75 01 	sts	0x0175, r24
      e4:	90 93 76 01 	sts	0x0176, r25
      e8:	a0 93 77 01 	sts	0x0177, r26
      ec:	b0 93 78 01 	sts	0x0178, r27
      f0:	08 95       	ret

000000f2 <uart_write_async>:
      f2:	cf 93       	push	r28
      f4:	df 93       	push	r29
      f6:	ec 01       	movw	r28, r24
      f8:	e1 ec       	ldi	r30, 0xC1	; 193
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	8f 7b       	andi	r24, 0xBF	; 191
     100:	80 83       	st	Z, r24
     102:	88 81       	ld	r24, Y
     104:	88 23       	and	r24, r24
     106:	29 f0       	breq	.+10     	; 0x112 <uart_write_async+0x20>
     108:	21 96       	adiw	r28, 0x01	; 1
     10a:	c0 df       	rcall	.-128    	; 0x8c <uart_send_byte>
     10c:	89 91       	ld	r24, Y+
     10e:	81 11       	cpse	r24, r1
     110:	fc cf       	rjmp	.-8      	; 0x10a <uart_write_async+0x18>
     112:	e1 ec       	ldi	r30, 0xC1	; 193
     114:	f0 e0       	ldi	r31, 0x00	; 0
     116:	80 81       	ld	r24, Z
     118:	80 64       	ori	r24, 0x40	; 64
     11a:	80 83       	st	Z, r24
     11c:	df 91       	pop	r29
     11e:	cf 91       	pop	r28
     120:	08 95       	ret

00000122 <uart_irq_tx>:
     122:	e0 91 08 01 	lds	r30, 0x0108
     126:	f0 91 09 01 	lds	r31, 0x0109
     12a:	80 91 06 01 	lds	r24, 0x0106
     12e:	90 91 07 01 	lds	r25, 0x0107
     132:	e8 17       	cp	r30, r24
     134:	f9 07       	cpc	r31, r25
     136:	51 f1       	breq	.+84     	; 0x18c <uart_irq_tx+0x6a>
     138:	80 81       	ld	r24, Z
     13a:	80 93 c6 00 	sts	0x00C6, r24
     13e:	80 91 08 01 	lds	r24, 0x0108
     142:	90 91 09 01 	lds	r25, 0x0109
     146:	01 96       	adiw	r24, 0x01	; 1
     148:	22 e0       	ldi	r18, 0x02	; 2
     14a:	89 37       	cpi	r24, 0x79	; 121
     14c:	92 07       	cpc	r25, r18
     14e:	28 f4       	brcc	.+10     	; 0x15a <uart_irq_tx+0x38>
     150:	90 93 09 01 	sts	0x0109, r25
     154:	80 93 08 01 	sts	0x0108, r24
     158:	06 c0       	rjmp	.+12     	; 0x166 <uart_irq_tx+0x44>
     15a:	89 e7       	ldi	r24, 0x79	; 121
     15c:	91 e0       	ldi	r25, 0x01	; 1
     15e:	90 93 09 01 	sts	0x0109, r25
     162:	80 93 08 01 	sts	0x0108, r24
     166:	80 91 75 01 	lds	r24, 0x0175
     16a:	90 91 76 01 	lds	r25, 0x0176
     16e:	a0 91 77 01 	lds	r26, 0x0177
     172:	b0 91 78 01 	lds	r27, 0x0178
     176:	01 97       	sbiw	r24, 0x01	; 1
     178:	a1 09       	sbc	r26, r1
     17a:	b1 09       	sbc	r27, r1
     17c:	80 93 75 01 	sts	0x0175, r24
     180:	90 93 76 01 	sts	0x0176, r25
     184:	a0 93 77 01 	sts	0x0177, r26
     188:	b0 93 78 01 	sts	0x0178, r27
     18c:	08 95       	ret

0000018e <__vector_20>:
     18e:	1f 92       	push	r1
     190:	0f 92       	push	r0
     192:	0f b6       	in	r0, 0x3f	; 63
     194:	0f 92       	push	r0
     196:	11 24       	eor	r1, r1
     198:	2f 93       	push	r18
     19a:	3f 93       	push	r19
     19c:	4f 93       	push	r20
     19e:	5f 93       	push	r21
     1a0:	6f 93       	push	r22
     1a2:	7f 93       	push	r23
     1a4:	8f 93       	push	r24
     1a6:	9f 93       	push	r25
     1a8:	af 93       	push	r26
     1aa:	bf 93       	push	r27
     1ac:	ef 93       	push	r30
     1ae:	ff 93       	push	r31
     1b0:	b8 df       	rcall	.-144    	; 0x122 <uart_irq_tx>
     1b2:	ff 91       	pop	r31
     1b4:	ef 91       	pop	r30
     1b6:	bf 91       	pop	r27
     1b8:	af 91       	pop	r26
     1ba:	9f 91       	pop	r25
     1bc:	8f 91       	pop	r24
     1be:	7f 91       	pop	r23
     1c0:	6f 91       	pop	r22
     1c2:	5f 91       	pop	r21
     1c4:	4f 91       	pop	r20
     1c6:	3f 91       	pop	r19
     1c8:	2f 91       	pop	r18
     1ca:	0f 90       	pop	r0
     1cc:	0f be       	out	0x3f, r0	; 63
     1ce:	0f 90       	pop	r0
     1d0:	1f 90       	pop	r1
     1d2:	18 95       	reti

000001d4 <uart_irq_udre>:
     1d4:	e0 91 08 01 	lds	r30, 0x0108
     1d8:	f0 91 09 01 	lds	r31, 0x0109
     1dc:	80 81       	ld	r24, Z
     1de:	80 93 c6 00 	sts	0x00C6, r24
     1e2:	80 91 08 01 	lds	r24, 0x0108
     1e6:	90 91 09 01 	lds	r25, 0x0109
     1ea:	01 96       	adiw	r24, 0x01	; 1
     1ec:	22 e0       	ldi	r18, 0x02	; 2
     1ee:	89 37       	cpi	r24, 0x79	; 121
     1f0:	92 07       	cpc	r25, r18
     1f2:	28 f4       	brcc	.+10     	; 0x1fe <uart_irq_udre+0x2a>
     1f4:	90 93 09 01 	sts	0x0109, r25
     1f8:	80 93 08 01 	sts	0x0108, r24
     1fc:	06 c0       	rjmp	.+12     	; 0x20a <uart_irq_udre+0x36>
     1fe:	89 e7       	ldi	r24, 0x79	; 121
     200:	91 e0       	ldi	r25, 0x01	; 1
     202:	90 93 09 01 	sts	0x0109, r25
     206:	80 93 08 01 	sts	0x0108, r24
     20a:	e1 ec       	ldi	r30, 0xC1	; 193
     20c:	f0 e0       	ldi	r31, 0x00	; 0
     20e:	80 81       	ld	r24, Z
     210:	8f 7d       	andi	r24, 0xDF	; 223
     212:	80 83       	st	Z, r24
     214:	80 91 75 01 	lds	r24, 0x0175
     218:	90 91 76 01 	lds	r25, 0x0176
     21c:	a0 91 77 01 	lds	r26, 0x0177
     220:	b0 91 78 01 	lds	r27, 0x0178
     224:	01 97       	sbiw	r24, 0x01	; 1
     226:	a1 09       	sbc	r26, r1
     228:	b1 09       	sbc	r27, r1
     22a:	80 93 75 01 	sts	0x0175, r24
     22e:	90 93 76 01 	sts	0x0176, r25
     232:	a0 93 77 01 	sts	0x0177, r26
     236:	b0 93 78 01 	sts	0x0178, r27
     23a:	08 95       	ret

0000023c <__vector_19>:
     23c:	1f 92       	push	r1
     23e:	0f 92       	push	r0
     240:	0f b6       	in	r0, 0x3f	; 63
     242:	0f 92       	push	r0
     244:	11 24       	eor	r1, r1
     246:	2f 93       	push	r18
     248:	3f 93       	push	r19
     24a:	4f 93       	push	r20
     24c:	5f 93       	push	r21
     24e:	6f 93       	push	r22
     250:	7f 93       	push	r23
     252:	8f 93       	push	r24
     254:	9f 93       	push	r25
     256:	af 93       	push	r26
     258:	bf 93       	push	r27
     25a:	ef 93       	push	r30
     25c:	ff 93       	push	r31
     25e:	ba df       	rcall	.-140    	; 0x1d4 <uart_irq_udre>
     260:	ff 91       	pop	r31
     262:	ef 91       	pop	r30
     264:	bf 91       	pop	r27
     266:	af 91       	pop	r26
     268:	9f 91       	pop	r25
     26a:	8f 91       	pop	r24
     26c:	7f 91       	pop	r23
     26e:	6f 91       	pop	r22
     270:	5f 91       	pop	r21
     272:	4f 91       	pop	r20
     274:	3f 91       	pop	r19
     276:	2f 91       	pop	r18
     278:	0f 90       	pop	r0
     27a:	0f be       	out	0x3f, r0	; 63
     27c:	0f 90       	pop	r0
     27e:	1f 90       	pop	r1
     280:	18 95       	reti

00000282 <spi_init>:
     282:	84 b1       	in	r24, 0x04	; 4
     284:	83 7c       	andi	r24, 0xC3	; 195
     286:	84 b9       	out	0x04, r24	; 4
     288:	84 b1       	in	r24, 0x04	; 4
     28a:	8c 62       	ori	r24, 0x2C	; 44
     28c:	84 b9       	out	0x04, r24	; 4
     28e:	80 e5       	ldi	r24, 0x50	; 80
     290:	8c bd       	out	0x2c, r24	; 44
     292:	81 e0       	ldi	r24, 0x01	; 1
     294:	8d bd       	out	0x2d, r24	; 45
     296:	08 95       	ret

00000298 <spi_transfer_sync>:
     298:	44 23       	and	r20, r20
     29a:	81 f0       	breq	.+32     	; 0x2bc <spi_transfer_sync+0x24>
     29c:	28 2f       	mov	r18, r24
     29e:	a6 2f       	mov	r26, r22
     2a0:	b7 2f       	mov	r27, r23
     2a2:	e8 2f       	mov	r30, r24
     2a4:	f9 2f       	mov	r31, r25
     2a6:	81 91       	ld	r24, Z+
     2a8:	8e bd       	out	0x2e, r24	; 46
     2aa:	0d b4       	in	r0, 0x2d	; 45
     2ac:	07 fe       	sbrs	r0, 7
     2ae:	fd cf       	rjmp	.-6      	; 0x2aa <spi_transfer_sync+0x12>
     2b0:	8e b5       	in	r24, 0x2e	; 46
     2b2:	8d 93       	st	X+, r24
     2b4:	8e 2f       	mov	r24, r30
     2b6:	82 1b       	sub	r24, r18
     2b8:	84 17       	cp	r24, r20
     2ba:	a8 f3       	brcs	.-22     	; 0x2a6 <spi_transfer_sync+0xe>
     2bc:	08 95       	ret

000002be <spi_transmit_sync>:
     2be:	66 23       	and	r22, r22
     2c0:	61 f0       	breq	.+24     	; 0x2da <spi_transmit_sync+0x1c>
     2c2:	28 2f       	mov	r18, r24
     2c4:	e8 2f       	mov	r30, r24
     2c6:	f9 2f       	mov	r31, r25
     2c8:	81 91       	ld	r24, Z+
     2ca:	8e bd       	out	0x2e, r24	; 46
     2cc:	0d b4       	in	r0, 0x2d	; 45
     2ce:	07 fe       	sbrs	r0, 7
     2d0:	fd cf       	rjmp	.-6      	; 0x2cc <spi_transmit_sync+0xe>
     2d2:	8e 2f       	mov	r24, r30
     2d4:	82 1b       	sub	r24, r18
     2d6:	86 17       	cp	r24, r22
     2d8:	b8 f3       	brcs	.-18     	; 0x2c8 <spi_transmit_sync+0xa>
     2da:	08 95       	ret

000002dc <spi_fast_shift>:
     2dc:	8e bd       	out	0x2e, r24	; 46
     2de:	0d b4       	in	r0, 0x2d	; 45
     2e0:	07 fe       	sbrs	r0, 7
     2e2:	fd cf       	rjmp	.-6      	; 0x2de <spi_fast_shift+0x2>
     2e4:	8e b5       	in	r24, 0x2e	; 46
     2e6:	08 95       	ret

000002e8 <NRF24L01_flush_rx>:
     2e8:	29 98       	cbi	0x05, 1	; 5
     2ea:	82 ee       	ldi	r24, 0xE2	; 226
     2ec:	f7 df       	rcall	.-18     	; 0x2dc <spi_fast_shift>
     2ee:	29 9a       	sbi	0x05, 1	; 5
     2f0:	08 95       	ret

000002f2 <NRF24L01_flush_tx>:
     2f2:	29 98       	cbi	0x05, 1	; 5
     2f4:	81 ee       	ldi	r24, 0xE1	; 225
     2f6:	f2 df       	rcall	.-28     	; 0x2dc <spi_fast_shift>
     2f8:	29 9a       	sbi	0x05, 1	; 5
     2fa:	08 95       	ret

000002fc <NRF24L01_LOW_init_IO>:
     2fc:	20 9a       	sbi	0x04, 0	; 4
     2fe:	21 9a       	sbi	0x04, 1	; 4
     300:	28 98       	cbi	0x05, 0	; 5
     302:	29 9a       	sbi	0x05, 1	; 5
     304:	08 95       	ret

00000306 <NRF24L01_LOW_set_register>:
     306:	cf 93       	push	r28
     308:	c6 2f       	mov	r28, r22
     30a:	29 98       	cbi	0x05, 1	; 5
     30c:	80 62       	ori	r24, 0x20	; 32
     30e:	e6 df       	rcall	.-52     	; 0x2dc <spi_fast_shift>
     310:	8c 2f       	mov	r24, r28
     312:	e4 df       	rcall	.-56     	; 0x2dc <spi_fast_shift>
     314:	29 9a       	sbi	0x05, 1	; 5
     316:	cf 91       	pop	r28
     318:	08 95       	ret

0000031a <NRF24L01_init>:
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	ee df       	rcall	.-36     	; 0x2fc <NRF24L01_LOW_init_IO>
     320:	b0 df       	rcall	.-160    	; 0x282 <spi_init>
     322:	e2 df       	rcall	.-60     	; 0x2e8 <NRF24L01_flush_rx>
     324:	e6 df       	rcall	.-52     	; 0x2f2 <NRF24L01_flush_tx>
     326:	60 e7       	ldi	r22, 0x70	; 112
     328:	87 e0       	ldi	r24, 0x07	; 7
     32a:	ed df       	rcall	.-38     	; 0x306 <NRF24L01_LOW_set_register>
     32c:	81 e0       	ldi	r24, 0x01	; 1
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	1d d3       	rcall	.+1594   	; 0x96c <malloc>
     332:	ec 01       	movw	r28, r24
     334:	8f e0       	ldi	r24, 0x0F	; 15
     336:	88 83       	st	Y, r24
     338:	6f e0       	ldi	r22, 0x0F	; 15
     33a:	80 e0       	ldi	r24, 0x00	; 0
     33c:	e4 df       	rcall	.-56     	; 0x306 <NRF24L01_LOW_set_register>
     33e:	ce 01       	movw	r24, r28
     340:	ad d3       	rcall	.+1882   	; 0xa9c <free>
     342:	81 e0       	ldi	r24, 0x01	; 1
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	12 d3       	rcall	.+1572   	; 0x96c <malloc>
     348:	ec 01       	movw	r28, r24
     34a:	8a e2       	ldi	r24, 0x2A	; 42
     34c:	88 83       	st	Y, r24
     34e:	6a e2       	ldi	r22, 0x2A	; 42
     350:	85 e0       	ldi	r24, 0x05	; 5
     352:	d9 df       	rcall	.-78     	; 0x306 <NRF24L01_LOW_set_register>
     354:	ce 01       	movw	r24, r28
     356:	a2 d3       	rcall	.+1860   	; 0xa9c <free>
     358:	81 e0       	ldi	r24, 0x01	; 1
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	07 d3       	rcall	.+1550   	; 0x96c <malloc>
     35e:	ec 01       	movw	r28, r24
     360:	86 e0       	ldi	r24, 0x06	; 6
     362:	88 83       	st	Y, r24
     364:	66 e0       	ldi	r22, 0x06	; 6
     366:	cf df       	rcall	.-98     	; 0x306 <NRF24L01_LOW_set_register>
     368:	ce 01       	movw	r24, r28
     36a:	98 d3       	rcall	.+1840   	; 0xa9c <free>
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	fd d2       	rcall	.+1530   	; 0x96c <malloc>
     372:	ec 01       	movw	r28, r24
     374:	68 81       	ld	r22, Y
     376:	60 7c       	andi	r22, 0xC0	; 192
     378:	60 62       	ori	r22, 0x20	; 32
     37a:	68 83       	st	Y, r22
     37c:	81 e1       	ldi	r24, 0x11	; 17
     37e:	c3 df       	rcall	.-122    	; 0x306 <NRF24L01_LOW_set_register>
     380:	68 81       	ld	r22, Y
     382:	82 e1       	ldi	r24, 0x12	; 18
     384:	c0 df       	rcall	.-128    	; 0x306 <NRF24L01_LOW_set_register>
     386:	ce 01       	movw	r24, r28
     388:	89 d3       	rcall	.+1810   	; 0xa9c <free>
     38a:	28 9a       	sbi	0x05, 0	; 5
     38c:	df 91       	pop	r29
     38e:	cf 91       	pop	r28
     390:	08 95       	ret

00000392 <NRF24L01_get_received_data>:
     392:	1f 93       	push	r17
     394:	cf 93       	push	r28
     396:	df 93       	push	r29
     398:	ec 01       	movw	r28, r24
     39a:	16 2f       	mov	r17, r22
     39c:	29 98       	cbi	0x05, 1	; 5
     39e:	81 e6       	ldi	r24, 0x61	; 97
     3a0:	9d df       	rcall	.-198    	; 0x2dc <spi_fast_shift>
     3a2:	41 2f       	mov	r20, r17
     3a4:	be 01       	movw	r22, r28
     3a6:	ce 01       	movw	r24, r28
     3a8:	77 df       	rcall	.-274    	; 0x298 <spi_transfer_sync>
     3aa:	29 9a       	sbi	0x05, 1	; 5
     3ac:	60 e4       	ldi	r22, 0x40	; 64
     3ae:	87 e0       	ldi	r24, 0x07	; 7
     3b0:	aa df       	rcall	.-172    	; 0x306 <NRF24L01_LOW_set_register>
     3b2:	df 91       	pop	r29
     3b4:	cf 91       	pop	r28
     3b6:	1f 91       	pop	r17
     3b8:	08 95       	ret

000003ba <NRF24L01_LOW_write_register>:
     3ba:	1f 93       	push	r17
     3bc:	cf 93       	push	r28
     3be:	df 93       	push	r29
     3c0:	eb 01       	movw	r28, r22
     3c2:	14 2f       	mov	r17, r20
     3c4:	29 98       	cbi	0x05, 1	; 5
     3c6:	80 62       	ori	r24, 0x20	; 32
     3c8:	89 df       	rcall	.-238    	; 0x2dc <spi_fast_shift>
     3ca:	61 2f       	mov	r22, r17
     3cc:	ce 01       	movw	r24, r28
     3ce:	77 df       	rcall	.-274    	; 0x2be <spi_transmit_sync>
     3d0:	29 9a       	sbi	0x05, 1	; 5
     3d2:	df 91       	pop	r29
     3d4:	cf 91       	pop	r28
     3d6:	1f 91       	pop	r17
     3d8:	08 95       	ret

000003da <NRF24L01_LOW_read_register>:
     3da:	1f 93       	push	r17
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	eb 01       	movw	r28, r22
     3e2:	14 2f       	mov	r17, r20
     3e4:	29 98       	cbi	0x05, 1	; 5
     3e6:	7a df       	rcall	.-268    	; 0x2dc <spi_fast_shift>
     3e8:	41 2f       	mov	r20, r17
     3ea:	be 01       	movw	r22, r28
     3ec:	ce 01       	movw	r24, r28
     3ee:	54 df       	rcall	.-344    	; 0x298 <spi_transfer_sync>
     3f0:	29 9a       	sbi	0x05, 1	; 5
     3f2:	df 91       	pop	r29
     3f4:	cf 91       	pop	r28
     3f6:	1f 91       	pop	r17
     3f8:	08 95       	ret

000003fa <NRF24L01_LOW_get_register>:
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	1f 92       	push	r1
     400:	cd b7       	in	r28, 0x3d	; 61
     402:	de b7       	in	r29, 0x3e	; 62
     404:	41 e0       	ldi	r20, 0x01	; 1
     406:	be 01       	movw	r22, r28
     408:	6f 5f       	subi	r22, 0xFF	; 255
     40a:	7f 4f       	sbci	r23, 0xFF	; 255
     40c:	e6 df       	rcall	.-52     	; 0x3da <NRF24L01_LOW_read_register>
     40e:	89 81       	ldd	r24, Y+1	; 0x01
     410:	0f 90       	pop	r0
     412:	df 91       	pop	r29
     414:	cf 91       	pop	r28
     416:	08 95       	ret

00000418 <NRF24L01_data_ready>:
     418:	87 e1       	ldi	r24, 0x17	; 23
     41a:	ef df       	rcall	.-34     	; 0x3fa <NRF24L01_LOW_get_register>
     41c:	80 95       	com	r24
     41e:	81 70       	andi	r24, 0x01	; 1
     420:	08 95       	ret

00000422 <NRF24L01_set_rx>:
     422:	80 e0       	ldi	r24, 0x00	; 0
     424:	ea df       	rcall	.-44     	; 0x3fa <NRF24L01_LOW_get_register>
     426:	8f 77       	andi	r24, 0x7F	; 127
     428:	68 2f       	mov	r22, r24
     42a:	63 60       	ori	r22, 0x03	; 3
     42c:	80 e0       	ldi	r24, 0x00	; 0
     42e:	6b df       	rcall	.-298    	; 0x306 <NRF24L01_LOW_set_register>
     430:	28 9a       	sbi	0x05, 0	; 5
     432:	08 95       	ret

00000434 <NRF24L01_LOW_read_byte>:
     434:	29 98       	cbi	0x05, 1	; 5
     436:	52 df       	rcall	.-348    	; 0x2dc <spi_fast_shift>
     438:	29 9a       	sbi	0x05, 1	; 5
     43a:	08 95       	ret

0000043c <NRF24L01_get_status>:
     43c:	8f ef       	ldi	r24, 0xFF	; 255
     43e:	fa cf       	rjmp	.-12     	; 0x434 <NRF24L01_LOW_read_byte>
     440:	08 95       	ret

00000442 <core_init>:
     442:	00 97       	sbiw	r24, 0x00	; 0
     444:	89 f0       	breq	.+34     	; 0x468 <core_init+0x26>
     446:	90 93 72 01 	sts	0x0172, r25
     44a:	80 93 71 01 	sts	0x0171, r24
     44e:	88 0f       	add	r24, r24
     450:	99 1f       	adc	r25, r25
     452:	8c d2       	rcall	.+1304   	; 0x96c <malloc>
     454:	9c 01       	movw	r18, r24
     456:	90 93 74 01 	sts	0x0174, r25
     45a:	80 93 73 01 	sts	0x0173, r24
     45e:	81 e0       	ldi	r24, 0x01	; 1
     460:	23 2b       	or	r18, r19
     462:	19 f0       	breq	.+6      	; 0x46a <core_init+0x28>
     464:	80 e0       	ldi	r24, 0x00	; 0
     466:	08 95       	ret
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	08 95       	ret

0000046c <core_register_field>:
     46c:	cf 92       	push	r12
     46e:	df 92       	push	r13
     470:	ef 92       	push	r14
     472:	ff 92       	push	r15
     474:	0f 93       	push	r16
     476:	1f 93       	push	r17
     478:	cf 93       	push	r28
     47a:	df 93       	push	r29
     47c:	ec 01       	movw	r28, r24
     47e:	6b 01       	movw	r12, r22
     480:	7a 01       	movw	r14, r20
     482:	12 2f       	mov	r17, r18
     484:	80 91 71 01 	lds	r24, 0x0171
     488:	90 91 72 01 	lds	r25, 0x0172
     48c:	c8 17       	cp	r28, r24
     48e:	d9 07       	cpc	r29, r25
     490:	e0 f4       	brcc	.+56     	; 0x4ca <core_register_field+0x5e>
     492:	85 e0       	ldi	r24, 0x05	; 5
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	6a d2       	rcall	.+1236   	; 0x96c <malloc>
     498:	fc 01       	movw	r30, r24
     49a:	00 97       	sbiw	r24, 0x00	; 0
     49c:	c1 f0       	breq	.+48     	; 0x4ce <core_register_field+0x62>
     49e:	d1 82       	std	Z+1, r13	; 0x01
     4a0:	c0 82       	st	Z, r12
     4a2:	f3 82       	std	Z+3, r15	; 0x03
     4a4:	e2 82       	std	Z+2, r14	; 0x02
     4a6:	84 81       	ldd	r24, Z+4	; 0x04
     4a8:	10 fb       	bst	r17, 0
     4aa:	80 f9       	bld	r24, 0
     4ac:	00 fb       	bst	r16, 0
     4ae:	81 f9       	bld	r24, 1
     4b0:	84 83       	std	Z+4, r24	; 0x04
     4b2:	cc 0f       	add	r28, r28
     4b4:	dd 1f       	adc	r29, r29
     4b6:	80 91 73 01 	lds	r24, 0x0173
     4ba:	90 91 74 01 	lds	r25, 0x0174
     4be:	c8 0f       	add	r28, r24
     4c0:	d9 1f       	adc	r29, r25
     4c2:	f9 83       	std	Y+1, r31	; 0x01
     4c4:	e8 83       	st	Y, r30
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	03 c0       	rjmp	.+6      	; 0x4d0 <core_register_field+0x64>
     4ca:	82 e0       	ldi	r24, 0x02	; 2
     4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <core_register_field+0x64>
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	0f 91       	pop	r16
     4d8:	ff 90       	pop	r15
     4da:	ef 90       	pop	r14
     4dc:	df 90       	pop	r13
     4de:	cf 90       	pop	r12
     4e0:	08 95       	ret

000004e2 <core_read_field>:
     4e2:	db 01       	movw	r26, r22
     4e4:	e0 91 71 01 	lds	r30, 0x0171
     4e8:	f0 91 72 01 	lds	r31, 0x0172
     4ec:	8e 17       	cp	r24, r30
     4ee:	9f 07       	cpc	r25, r31
     4f0:	f0 f4       	brcc	.+60     	; 0x52e <__stack+0x2f>
     4f2:	88 0f       	add	r24, r24
     4f4:	99 1f       	adc	r25, r25
     4f6:	e0 91 73 01 	lds	r30, 0x0173
     4fa:	f0 91 74 01 	lds	r31, 0x0174
     4fe:	e8 0f       	add	r30, r24
     500:	f9 1f       	adc	r31, r25
     502:	01 90       	ld	r0, Z+
     504:	f0 81       	ld	r31, Z
     506:	e0 2d       	mov	r30, r0
     508:	30 97       	sbiw	r30, 0x00	; 0
     50a:	99 f0       	breq	.+38     	; 0x532 <__stack+0x33>
     50c:	82 81       	ldd	r24, Z+2	; 0x02
     50e:	93 81       	ldd	r25, Z+3	; 0x03
     510:	b9 01       	movw	r22, r18
     512:	64 0f       	add	r22, r20
     514:	75 1f       	adc	r23, r21
     516:	86 17       	cp	r24, r22
     518:	97 07       	cpc	r25, r23
     51a:	68 f0       	brcs	.+26     	; 0x536 <__stack+0x37>
     51c:	60 81       	ld	r22, Z
     51e:	71 81       	ldd	r23, Z+1	; 0x01
     520:	64 0f       	add	r22, r20
     522:	75 1f       	adc	r23, r21
     524:	a9 01       	movw	r20, r18
     526:	cd 01       	movw	r24, r26
     528:	48 d3       	rcall	.+1680   	; 0xbba <memcpy>
     52a:	80 e0       	ldi	r24, 0x00	; 0
     52c:	08 95       	ret
     52e:	82 e0       	ldi	r24, 0x02	; 2
     530:	08 95       	ret
     532:	83 e0       	ldi	r24, 0x03	; 3
     534:	08 95       	ret
     536:	84 e0       	ldi	r24, 0x04	; 4
     538:	08 95       	ret

0000053a <callback>:
     53a:	cf 93       	push	r28
     53c:	df 93       	push	r29
     53e:	1f 92       	push	r1
     540:	cd b7       	in	r28, 0x3d	; 61
     542:	de b7       	in	r29, 0x3e	; 62
     544:	81 30       	cpi	r24, 0x01	; 1
     546:	91 05       	cpc	r25, r1
     548:	e9 f0       	breq	.+58     	; 0x584 <callback+0x4a>
     54a:	18 f0       	brcs	.+6      	; 0x552 <callback+0x18>
     54c:	02 97       	sbiw	r24, 0x02	; 2
     54e:	99 f1       	breq	.+102    	; 0x5b6 <callback+0x7c>
     550:	4f c0       	rjmp	.+158    	; 0x5f0 <callback+0xb6>
     552:	19 82       	std	Y+1, r1	; 0x01
     554:	21 e0       	ldi	r18, 0x01	; 1
     556:	30 e0       	ldi	r19, 0x00	; 0
     558:	40 e0       	ldi	r20, 0x00	; 0
     55a:	50 e0       	ldi	r21, 0x00	; 0
     55c:	be 01       	movw	r22, r28
     55e:	6f 5f       	subi	r22, 0xFF	; 255
     560:	7f 4f       	sbci	r23, 0xFF	; 255
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	bd df       	rcall	.-134    	; 0x4e2 <core_read_field>
     568:	89 81       	ldd	r24, Y+1	; 0x01
     56a:	81 11       	cpse	r24, r1
     56c:	05 c0       	rjmp	.+10     	; 0x578 <callback+0x3e>
     56e:	84 b5       	in	r24, 0x24	; 36
     570:	8f 77       	andi	r24, 0x7F	; 127
     572:	84 bd       	out	0x24, r24	; 36
     574:	5e 98       	cbi	0x0b, 6	; 11
     576:	03 c0       	rjmp	.+6      	; 0x57e <callback+0x44>
     578:	84 b5       	in	r24, 0x24	; 36
     57a:	80 68       	ori	r24, 0x80	; 128
     57c:	84 bd       	out	0x24, r24	; 36
     57e:	89 81       	ldd	r24, Y+1	; 0x01
     580:	87 bd       	out	0x27, r24	; 39
     582:	36 c0       	rjmp	.+108    	; 0x5f0 <callback+0xb6>
     584:	19 82       	std	Y+1, r1	; 0x01
     586:	21 e0       	ldi	r18, 0x01	; 1
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	40 e0       	ldi	r20, 0x00	; 0
     58c:	50 e0       	ldi	r21, 0x00	; 0
     58e:	be 01       	movw	r22, r28
     590:	6f 5f       	subi	r22, 0xFF	; 255
     592:	7f 4f       	sbci	r23, 0xFF	; 255
     594:	81 e0       	ldi	r24, 0x01	; 1
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	a4 df       	rcall	.-184    	; 0x4e2 <core_read_field>
     59a:	89 81       	ldd	r24, Y+1	; 0x01
     59c:	81 11       	cpse	r24, r1
     59e:	05 c0       	rjmp	.+10     	; 0x5aa <callback+0x70>
     5a0:	84 b5       	in	r24, 0x24	; 36
     5a2:	8f 7d       	andi	r24, 0xDF	; 223
     5a4:	84 bd       	out	0x24, r24	; 36
     5a6:	5d 98       	cbi	0x0b, 5	; 11
     5a8:	03 c0       	rjmp	.+6      	; 0x5b0 <callback+0x76>
     5aa:	84 b5       	in	r24, 0x24	; 36
     5ac:	80 62       	ori	r24, 0x20	; 32
     5ae:	84 bd       	out	0x24, r24	; 36
     5b0:	89 81       	ldd	r24, Y+1	; 0x01
     5b2:	88 bd       	out	0x28, r24	; 40
     5b4:	1d c0       	rjmp	.+58     	; 0x5f0 <callback+0xb6>
     5b6:	19 82       	std	Y+1, r1	; 0x01
     5b8:	21 e0       	ldi	r18, 0x01	; 1
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	40 e0       	ldi	r20, 0x00	; 0
     5be:	50 e0       	ldi	r21, 0x00	; 0
     5c0:	be 01       	movw	r22, r28
     5c2:	6f 5f       	subi	r22, 0xFF	; 255
     5c4:	7f 4f       	sbci	r23, 0xFF	; 255
     5c6:	82 e0       	ldi	r24, 0x02	; 2
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	8b df       	rcall	.-234    	; 0x4e2 <core_read_field>
     5cc:	89 81       	ldd	r24, Y+1	; 0x01
     5ce:	81 11       	cpse	r24, r1
     5d0:	07 c0       	rjmp	.+14     	; 0x5e0 <callback+0xa6>
     5d2:	e0 eb       	ldi	r30, 0xB0	; 176
     5d4:	f0 e0       	ldi	r31, 0x00	; 0
     5d6:	80 81       	ld	r24, Z
     5d8:	8f 7d       	andi	r24, 0xDF	; 223
     5da:	80 83       	st	Z, r24
     5dc:	5b 98       	cbi	0x0b, 3	; 11
     5de:	05 c0       	rjmp	.+10     	; 0x5ea <callback+0xb0>
     5e0:	e0 eb       	ldi	r30, 0xB0	; 176
     5e2:	f0 e0       	ldi	r31, 0x00	; 0
     5e4:	80 81       	ld	r24, Z
     5e6:	80 62       	ori	r24, 0x20	; 32
     5e8:	80 83       	st	Z, r24
     5ea:	89 81       	ldd	r24, Y+1	; 0x01
     5ec:	80 93 b4 00 	sts	0x00B4, r24
     5f0:	0f 90       	pop	r0
     5f2:	df 91       	pop	r29
     5f4:	cf 91       	pop	r28
     5f6:	08 95       	ret

000005f8 <core_write_field_ext>:
     5f8:	cf 93       	push	r28
     5fa:	df 93       	push	r29
     5fc:	ec 01       	movw	r28, r24
     5fe:	80 91 71 01 	lds	r24, 0x0171
     602:	90 91 72 01 	lds	r25, 0x0172
     606:	c8 17       	cp	r28, r24
     608:	d9 07       	cpc	r29, r25
     60a:	30 f5       	brcc	.+76     	; 0x658 <core_write_field_ext+0x60>
     60c:	e0 91 73 01 	lds	r30, 0x0173
     610:	f0 91 74 01 	lds	r31, 0x0174
     614:	ce 01       	movw	r24, r28
     616:	88 0f       	add	r24, r24
     618:	99 1f       	adc	r25, r25
     61a:	e8 0f       	add	r30, r24
     61c:	f9 1f       	adc	r31, r25
     61e:	01 90       	ld	r0, Z+
     620:	f0 81       	ld	r31, Z
     622:	e0 2d       	mov	r30, r0
     624:	30 97       	sbiw	r30, 0x00	; 0
     626:	d1 f0       	breq	.+52     	; 0x65c <core_write_field_ext+0x64>
     628:	84 81       	ldd	r24, Z+4	; 0x04
     62a:	81 ff       	sbrs	r24, 1
     62c:	19 c0       	rjmp	.+50     	; 0x660 <core_write_field_ext+0x68>
     62e:	82 81       	ldd	r24, Z+2	; 0x02
     630:	93 81       	ldd	r25, Z+3	; 0x03
     632:	82 17       	cp	r24, r18
     634:	93 07       	cpc	r25, r19
     636:	b0 f0       	brcs	.+44     	; 0x664 <core_write_field_ext+0x6c>
     638:	64 0f       	add	r22, r20
     63a:	75 1f       	adc	r23, r21
     63c:	a9 01       	movw	r20, r18
     63e:	80 81       	ld	r24, Z
     640:	91 81       	ldd	r25, Z+1	; 0x01
     642:	bb d2       	rcall	.+1398   	; 0xbba <memcpy>
     644:	e0 91 79 02 	lds	r30, 0x0279
     648:	f0 91 7a 02 	lds	r31, 0x027A
     64c:	30 97       	sbiw	r30, 0x00	; 0
     64e:	61 f0       	breq	.+24     	; 0x668 <core_write_field_ext+0x70>
     650:	ce 01       	movw	r24, r28
     652:	09 95       	icall
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	09 c0       	rjmp	.+18     	; 0x66a <core_write_field_ext+0x72>
     658:	82 e0       	ldi	r24, 0x02	; 2
     65a:	07 c0       	rjmp	.+14     	; 0x66a <core_write_field_ext+0x72>
     65c:	83 e0       	ldi	r24, 0x03	; 3
     65e:	05 c0       	rjmp	.+10     	; 0x66a <core_write_field_ext+0x72>
     660:	85 e0       	ldi	r24, 0x05	; 5
     662:	03 c0       	rjmp	.+6      	; 0x66a <core_write_field_ext+0x72>
     664:	84 e0       	ldi	r24, 0x04	; 4
     666:	01 c0       	rjmp	.+2      	; 0x66a <core_write_field_ext+0x72>
     668:	80 e0       	ldi	r24, 0x00	; 0
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	08 95       	ret

00000670 <core_remote_init>:
     670:	ef 92       	push	r14
     672:	ff 92       	push	r15
     674:	1f 93       	push	r17
     676:	cf 93       	push	r28
     678:	df 93       	push	r29
     67a:	ec 01       	movw	r28, r24
     67c:	16 2f       	mov	r17, r22
     67e:	80 91 7b 02 	lds	r24, 0x027B
     682:	8e 7f       	andi	r24, 0xFE	; 254
     684:	8d 7f       	andi	r24, 0xFD	; 253
     686:	80 93 7b 02 	sts	0x027B, r24
     68a:	82 e0       	ldi	r24, 0x02	; 2
     68c:	80 93 69 00 	sts	0x0069, r24
     690:	81 e0       	ldi	r24, 0x01	; 1
     692:	8d bb       	out	0x1d, r24	; 29
     694:	66 23       	and	r22, r22
     696:	09 f1       	breq	.+66     	; 0x6da <core_remote_init+0x6a>
     698:	66 30       	cpi	r22, 0x06	; 6
     69a:	08 f5       	brcc	.+66     	; 0x6de <core_remote_init+0x6e>
     69c:	e6 2e       	mov	r14, r22
     69e:	f1 2c       	mov	r15, r1
     6a0:	c7 01       	movw	r24, r14
     6a2:	64 d1       	rcall	.+712    	; 0x96c <malloc>
     6a4:	90 93 70 01 	sts	0x0170, r25
     6a8:	80 93 6f 01 	sts	0x016F, r24
     6ac:	00 97       	sbiw	r24, 0x00	; 0
     6ae:	c9 f0       	breq	.+50     	; 0x6e2 <core_remote_init+0x72>
     6b0:	a7 01       	movw	r20, r14
     6b2:	be 01       	movw	r22, r28
     6b4:	82 d2       	rcall	.+1284   	; 0xbba <memcpy>
     6b6:	10 93 6e 01 	sts	0x016E, r17
     6ba:	2f de       	rcall	.-930    	; 0x31a <NRF24L01_init>
     6bc:	2f ef       	ldi	r18, 0xFF	; 255
     6be:	81 ee       	ldi	r24, 0xE1	; 225
     6c0:	94 e0       	ldi	r25, 0x04	; 4
     6c2:	21 50       	subi	r18, 0x01	; 1
     6c4:	80 40       	sbci	r24, 0x00	; 0
     6c6:	90 40       	sbci	r25, 0x00	; 0
     6c8:	e1 f7       	brne	.-8      	; 0x6c2 <core_remote_init+0x52>
     6ca:	00 c0       	rjmp	.+0      	; 0x6cc <core_remote_init+0x5c>
     6cc:	00 00       	nop
     6ce:	41 2f       	mov	r20, r17
     6d0:	be 01       	movw	r22, r28
     6d2:	8b e0       	ldi	r24, 0x0B	; 11
     6d4:	72 de       	rcall	.-796    	; 0x3ba <NRF24L01_LOW_write_register>
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	05 c0       	rjmp	.+10     	; 0x6e4 <core_remote_init+0x74>
     6da:	84 e6       	ldi	r24, 0x64	; 100
     6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <core_remote_init+0x74>
     6de:	85 e6       	ldi	r24, 0x65	; 101
     6e0:	01 c0       	rjmp	.+2      	; 0x6e4 <core_remote_init+0x74>
     6e2:	81 e0       	ldi	r24, 0x01	; 1
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	ff 90       	pop	r15
     6ec:	ef 90       	pop	r14
     6ee:	08 95       	ret

000006f0 <core_remote_main>:

//Call in main program loop. Handles data reception.
//Main program loop must use sleep functions and wake
//up on external interrupt
uint8_t core_remote_main(void)
{
     6f0:	ff 92       	push	r15
     6f2:	0f 93       	push	r16
     6f4:	1f 93       	push	r17
     6f6:	cf 93       	push	r28
     6f8:	df 93       	push	r29
	uint8_t exit_code = CORE_OK;
	if(core_remote_NRF.data_ready)
     6fa:	80 91 7b 02 	lds	r24, 0x027B
     6fe:	81 ff       	sbrs	r24, 1
     700:	25 c0       	rjmp	.+74     	; 0x74c <core_remote_main+0x5c>
	{
		uint8_t* data = malloc(WIRELESS_PACK_LEN);
     702:	80 e2       	ldi	r24, 0x20	; 32
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	32 d1       	rcall	.+612    	; 0x96c <malloc>
     708:	ec 01       	movw	r28, r24
		if(data == NULL)
     70a:	00 97       	sbiw	r24, 0x00	; 0
     70c:	09 f1       	breq	.+66     	; 0x750 <core_remote_main+0x60>
			return CORE_ERROR_OUT_OF_MEM;
		NRF24L01_get_received_data(data, WIRELESS_PACK_LEN);
     70e:	60 e2       	ldi	r22, 0x20	; 32
     710:	40 de       	rcall	.-896    	; 0x392 <NRF24L01_get_received_data>
		uint8_t* packptr = data;
		packptr += 5;
		uint8_t data_len = *packptr & 0b11111;
     712:	fd 80       	ldd	r15, Y+5	; 0x05
		uint8_t rw = *packptr & 0b100000; //Ignoring bit 6 and 7 so far
		packptr += 1;
		uint16_t id;
		memcpy(&id, packptr, 2);
     714:	0e 81       	ldd	r16, Y+6	; 0x06
     716:	1f 81       	ldd	r17, Y+7	; 0x07
		packptr += 2;
		core_remote_NRF.data_ready = NRF24L01_data_ready();
     718:	7f de       	rcall	.-770    	; 0x418 <NRF24L01_data_ready>
     71a:	90 91 7b 02 	lds	r25, 0x027B
     71e:	80 fb       	bst	r24, 0
     720:	91 f9       	bld	r25, 1
     722:	90 93 7b 02 	sts	0x027B, r25
		if(rw)
     726:	f5 fe       	sbrs	r15, 5
     728:	0c c0       	rjmp	.+24     	; 0x742 <core_remote_main+0x52>
		if(data == NULL)
			return CORE_ERROR_OUT_OF_MEM;
		NRF24L01_get_received_data(data, WIRELESS_PACK_LEN);
		uint8_t* packptr = data;
		packptr += 5;
		uint8_t data_len = *packptr & 0b11111;
     72a:	2f 2d       	mov	r18, r15
     72c:	2f 71       	andi	r18, 0x1F	; 31
		packptr += 2;
		core_remote_NRF.data_ready = NRF24L01_data_ready();
		if(rw)
		{
			//Write
			exit_code = core_write_field_ext(id, packptr, 0, data_len);
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	40 e0       	ldi	r20, 0x00	; 0
     732:	50 e0       	ldi	r21, 0x00	; 0
     734:	be 01       	movw	r22, r28
     736:	68 5f       	subi	r22, 0xF8	; 248
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	c8 01       	movw	r24, r16
     73c:	5d df       	rcall	.-326    	; 0x5f8 <core_write_field_ext>
     73e:	18 2f       	mov	r17, r24
     740:	01 c0       	rjmp	.+2      	; 0x744 <core_remote_main+0x54>
//Call in main program loop. Handles data reception.
//Main program loop must use sleep functions and wake
//up on external interrupt
uint8_t core_remote_main(void)
{
	uint8_t exit_code = CORE_OK;
     742:	10 e0       	ldi	r17, 0x00	; 0
		}
		else
		{
			//Read	
		}
		free(data);
     744:	ce 01       	movw	r24, r28
     746:	aa d1       	rcall	.+852    	; 0xa9c <free>
     748:	81 2f       	mov	r24, r17
     74a:	03 c0       	rjmp	.+6      	; 0x752 <core_remote_main+0x62>
//Call in main program loop. Handles data reception.
//Main program loop must use sleep functions and wake
//up on external interrupt
uint8_t core_remote_main(void)
{
	uint8_t exit_code = CORE_OK;
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	01 c0       	rjmp	.+2      	; 0x752 <core_remote_main+0x62>
	if(core_remote_NRF.data_ready)
	{
		uint8_t* data = malloc(WIRELESS_PACK_LEN);
		if(data == NULL)
			return CORE_ERROR_OUT_OF_MEM;
     750:	81 e0       	ldi	r24, 0x01	; 1
			//Read	
		}
		free(data);
	}
	return exit_code;
}
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	1f 91       	pop	r17
     758:	0f 91       	pop	r16
     75a:	ff 90       	pop	r15
     75c:	08 95       	ret

0000075e <__vector_1>:

//NRF24L01 event handler. Sets flags for core_remote_main
ISR(INT0_vect)
{
     75e:	1f 92       	push	r1
     760:	0f 92       	push	r0
     762:	0f b6       	in	r0, 0x3f	; 63
     764:	0f 92       	push	r0
     766:	11 24       	eor	r1, r1
     768:	2f 93       	push	r18
     76a:	3f 93       	push	r19
     76c:	4f 93       	push	r20
     76e:	5f 93       	push	r21
     770:	6f 93       	push	r22
     772:	7f 93       	push	r23
     774:	8f 93       	push	r24
     776:	9f 93       	push	r25
     778:	af 93       	push	r26
     77a:	bf 93       	push	r27
     77c:	cf 93       	push	r28
     77e:	ef 93       	push	r30
     780:	ff 93       	push	r31
	uint8_t status = NRF24L01_get_status();
     782:	5c de       	rcall	.-840    	; 0x43c <NRF24L01_get_status>
     784:	c8 2f       	mov	r28, r24
	if(status & NRF24L01_MASK_STATUS_TX_DS)
     786:	85 ff       	sbrs	r24, 5
     788:	06 c0       	rjmp	.+12     	; 0x796 <__vector_1+0x38>
	{
		NRF24L01_set_rx();
     78a:	4b de       	rcall	.-874    	; 0x422 <NRF24L01_set_rx>
		core_remote_NRF.sending = FALSE;
     78c:	80 91 7b 02 	lds	r24, 0x027B
     790:	8e 7f       	andi	r24, 0xFE	; 254
     792:	80 93 7b 02 	sts	0x027B, r24
	}
	if(status & NRF24L01_MASK_STATUS_RX_DR)
     796:	c6 ff       	sbrs	r28, 6
     798:	05 c0       	rjmp	.+10     	; 0x7a4 <__vector_1+0x46>
	{
		core_remote_NRF.data_ready = TRUE;
     79a:	80 91 7b 02 	lds	r24, 0x027B
     79e:	82 60       	ori	r24, 0x02	; 2
     7a0:	80 93 7b 02 	sts	0x027B, r24
	}
	NRF24L01_LOW_set_register(NRF24L01_REG_STATUS, status & (NRF24L01_MASK_STATUS_TX_DS | NRF24L01_MASK_STATUS_MAX_RT));
     7a4:	6c 2f       	mov	r22, r28
     7a6:	60 73       	andi	r22, 0x30	; 48
     7a8:	87 e0       	ldi	r24, 0x07	; 7
     7aa:	ad dd       	rcall	.-1190   	; 0x306 <NRF24L01_LOW_set_register>
	if(status & NRF24L01_MASK_STATUS_MAX_RT)
	{
		
	}
}
     7ac:	ff 91       	pop	r31
     7ae:	ef 91       	pop	r30
     7b0:	cf 91       	pop	r28
     7b2:	bf 91       	pop	r27
     7b4:	af 91       	pop	r26
     7b6:	9f 91       	pop	r25
     7b8:	8f 91       	pop	r24
     7ba:	7f 91       	pop	r23
     7bc:	6f 91       	pop	r22
     7be:	5f 91       	pop	r21
     7c0:	4f 91       	pop	r20
     7c2:	3f 91       	pop	r19
     7c4:	2f 91       	pop	r18
     7c6:	0f 90       	pop	r0
     7c8:	0f be       	out	0x3f, r0	; 63
     7ca:	0f 90       	pop	r0
     7cc:	1f 90       	pop	r1
     7ce:	18 95       	reti

000007d0 <dump_config>:
		}
	}
}

void dump_config(uint8_t regaddr, uint8_t len)
{
     7d0:	ff 92       	push	r15
     7d2:	0f 93       	push	r16
     7d4:	1f 93       	push	r17
     7d6:	cf 93       	push	r28
     7d8:	df 93       	push	r29
     7da:	c8 2f       	mov	r28, r24
     7dc:	16 2f       	mov	r17, r22
	uint8_t* buff = malloc(len);
     7de:	86 2f       	mov	r24, r22
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	c4 d0       	rcall	.+392    	; 0x96c <malloc>
     7e4:	f8 2e       	mov	r15, r24
     7e6:	09 2f       	mov	r16, r25
	uint8_t* buffptr = buff;
	NRF24L01_LOW_read_register(regaddr, buff, len);
     7e8:	41 2f       	mov	r20, r17
     7ea:	68 2f       	mov	r22, r24
     7ec:	79 2f       	mov	r23, r25
     7ee:	8c 2f       	mov	r24, r28
     7f0:	f4 dd       	rcall	.-1048   	; 0x3da <NRF24L01_LOW_read_register>
	while(len-- > 0)
     7f2:	11 23       	and	r17, r17
     7f4:	31 f0       	breq	.+12     	; 0x802 <dump_config+0x32>
     7f6:	cf 2d       	mov	r28, r15
     7f8:	d0 2f       	mov	r29, r16
		uart_send_byte(*buffptr++);
     7fa:	89 91       	ld	r24, Y+
     7fc:	47 dc       	rcall	.-1906   	; 0x8c <uart_send_byte>
     7fe:	11 50       	subi	r17, 0x01	; 1
void dump_config(uint8_t regaddr, uint8_t len)
{
	uint8_t* buff = malloc(len);
	uint8_t* buffptr = buff;
	NRF24L01_LOW_read_register(regaddr, buff, len);
	while(len-- > 0)
     800:	e1 f7       	brne	.-8      	; 0x7fa <dump_config+0x2a>
		uart_send_byte(*buffptr++);
	free(buff);
     802:	8f 2d       	mov	r24, r15
     804:	90 2f       	mov	r25, r16
     806:	4a d1       	rcall	.+660    	; 0xa9c <free>
	uart_write_async("\n");
     808:	8d e4       	ldi	r24, 0x4D	; 77
     80a:	91 e0       	ldi	r25, 0x01	; 1
     80c:	72 dc       	rcall	.-1820   	; 0xf2 <uart_write_async>
}
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	1f 91       	pop	r17
     814:	0f 91       	pop	r16
     816:	ff 90       	pop	r15
     818:	08 95       	ret

0000081a <main>:

int main(void)
{
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	00 d0       	rcall	.+0      	; 0x820 <main+0x6>
     820:	00 d0       	rcall	.+0      	; 0x822 <main+0x8>
     822:	1f 92       	push	r1
     824:	cd b7       	in	r28, 0x3d	; 61
     826:	de b7       	in	r29, 0x3e	; 62
	DDRD = (1<<PIND3) | (1<<PIND5) | (1<<PIND6);
     828:	88 e6       	ldi	r24, 0x68	; 104
     82a:	8a b9       	out	0x0a, r24	; 10
	TCCR0A = (1<<WGM00) | (1<<WGM01);
     82c:	83 e0       	ldi	r24, 0x03	; 3
     82e:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<CS02); //timer0: Prescaler = 256 => ~122 Hz
     830:	84 e0       	ldi	r24, 0x04	; 4
     832:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<TOIE0); //timer0: Enable overflow interrupt
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	90 93 6e 00 	sts	0x006E, r25
	TCCR2A = (1<<WGM20) | (1<WGM21);
     83a:	90 93 b0 00 	sts	0x00B0, r25
	TCCR2B = (1<<CS22);
     83e:	80 93 b1 00 	sts	0x00B1, r24
	uart_init();
     842:	14 dc       	rcall	.-2008   	; 0x6c <uart_init>
	uart_init_tx();
     844:	1d dc       	rcall	.-1990   	; 0x80 <uart_init_tx>
	sei();
     846:	78 94       	sei
	core_init(3);
     848:	83 e0       	ldi	r24, 0x03	; 3
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	fa dd       	rcall	.-1036   	; 0x442 <core_init>
	uint8_t* pwm_red = malloc(1);
     84e:	81 e0       	ldi	r24, 0x01	; 1
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	8c d0       	rcall	.+280    	; 0x96c <malloc>
	uint8_t exit_code = core_register_field(0, pwm_red, 1, TRUE, TRUE);
     854:	01 e0       	ldi	r16, 0x01	; 1
     856:	21 e0       	ldi	r18, 0x01	; 1
     858:	41 e0       	ldi	r20, 0x01	; 1
     85a:	50 e0       	ldi	r21, 0x00	; 0
     85c:	bc 01       	movw	r22, r24
     85e:	80 e0       	ldi	r24, 0x00	; 0
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	04 de       	rcall	.-1016   	; 0x46c <core_register_field>
	uint8_t* pwm_green = malloc(1);
     864:	81 e0       	ldi	r24, 0x01	; 1
     866:	90 e0       	ldi	r25, 0x00	; 0
     868:	81 d0       	rcall	.+258    	; 0x96c <malloc>
	exit_code = core_register_field(1, pwm_green, 1, TRUE, TRUE);
     86a:	21 e0       	ldi	r18, 0x01	; 1
     86c:	41 e0       	ldi	r20, 0x01	; 1
     86e:	50 e0       	ldi	r21, 0x00	; 0
     870:	bc 01       	movw	r22, r24
     872:	81 e0       	ldi	r24, 0x01	; 1
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	fa dd       	rcall	.-1036   	; 0x46c <core_register_field>
	uint8_t* pwm_blue = malloc(1);
     878:	81 e0       	ldi	r24, 0x01	; 1
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	77 d0       	rcall	.+238    	; 0x96c <malloc>
	exit_code = core_register_field(2, pwm_blue, 1, TRUE, TRUE);
     87e:	21 e0       	ldi	r18, 0x01	; 1
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	bc 01       	movw	r22, r24
     886:	82 e0       	ldi	r24, 0x02	; 2
     888:	90 e0       	ldi	r25, 0x00	; 0
     88a:	f0 dd       	rcall	.-1056   	; 0x46c <core_register_field>
}

//Sets a callback function to get called on field writes
uint8_t core_set_write_callback(void (*callback)(uint16_t))
{
	core_write_callback = callback;
     88c:	8d e9       	ldi	r24, 0x9D	; 157
     88e:	92 e0       	ldi	r25, 0x02	; 2
     890:	90 93 7a 02 	sts	0x027A, r25
     894:	80 93 79 02 	sts	0x0279, r24
	core_set_write_callback(callback);
	uart_write_async("INIT_CORE: DONE\n");
     898:	8f e0       	ldi	r24, 0x0F	; 15
     89a:	91 e0       	ldi	r25, 0x01	; 1
     89c:	2a dc       	rcall	.-1964   	; 0xf2 <uart_write_async>
		uint8_t addr_two[5] = {0x42, 0x42, 0x42, 0x42, 0x43};
		uart_write_async("INIT_REMOTE.RX_ADDR: 0x13 0x37 0x13 0x37 0x43\n");
		uart_write_async("INIT_REMOTE.TX_ADDR: 0x42 0x42 0x42 0x42 0x42\n");
	#endif
	#ifdef RX
		uint8_t addr_one[5] = {0x42, 0x42, 0x42, 0x42, 0x43};
     89e:	85 e0       	ldi	r24, 0x05	; 5
     8a0:	ea e0       	ldi	r30, 0x0A	; 10
     8a2:	f1 e0       	ldi	r31, 0x01	; 1
     8a4:	de 01       	movw	r26, r28
     8a6:	11 96       	adiw	r26, 0x01	; 1
     8a8:	01 90       	ld	r0, Z+
     8aa:	0d 92       	st	X+, r0
     8ac:	8a 95       	dec	r24
     8ae:	e1 f7       	brne	.-8      	; 0x8a8 <main+0x8e>
		//uint8_t addr_two[5] = {0x13, 0x37, 0x13, 0x37, 0x42};
		uart_write_async("INIT_REMOTE.RX_ADDR: 0x42 0x42 0x42 0x42 0x43\n");
     8b0:	80 e2       	ldi	r24, 0x20	; 32
     8b2:	91 e0       	ldi	r25, 0x01	; 1
     8b4:	1e dc       	rcall	.-1988   	; 0xf2 <uart_write_async>
	#endif
	core_remote_init(addr_one, 5);
     8b6:	65 e0       	ldi	r22, 0x05	; 5
     8b8:	ce 01       	movw	r24, r28
     8ba:	01 96       	adiw	r24, 0x01	; 1
     8bc:	d9 de       	rcall	.-590    	; 0x670 <core_remote_init>
	uart_write_async("INIT_REMOTE: DONE\n");
     8be:	8f e4       	ldi	r24, 0x4F	; 79
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	17 dc       	rcall	.-2002   	; 0xf2 <uart_write_async>
	for(uint8_t i = 0; i <= 0x09; i++)
     8c4:	10 e0       	ldi	r17, 0x00	; 0
	{
		dump_config(i, 1);
     8c6:	61 e0       	ldi	r22, 0x01	; 1
     8c8:	81 2f       	mov	r24, r17
     8ca:	82 df       	rcall	.-252    	; 0x7d0 <dump_config>
		//uint8_t addr_two[5] = {0x13, 0x37, 0x13, 0x37, 0x42};
		uart_write_async("INIT_REMOTE.RX_ADDR: 0x42 0x42 0x42 0x42 0x43\n");
	#endif
	core_remote_init(addr_one, 5);
	uart_write_async("INIT_REMOTE: DONE\n");
	for(uint8_t i = 0; i <= 0x09; i++)
     8cc:	1f 5f       	subi	r17, 0xFF	; 255
     8ce:	1a 30       	cpi	r17, 0x0A	; 10
     8d0:	d1 f7       	brne	.-12     	; 0x8c6 <main+0xac>
	{
		dump_config(i, 1);
	}
	dump_config(0x0A, 5);
     8d2:	65 e0       	ldi	r22, 0x05	; 5
     8d4:	8a e0       	ldi	r24, 0x0A	; 10
     8d6:	7c df       	rcall	.-264    	; 0x7d0 <dump_config>
	dump_config(0x0B, 5);
     8d8:	65 e0       	ldi	r22, 0x05	; 5
     8da:	8b e0       	ldi	r24, 0x0B	; 11
     8dc:	79 df       	rcall	.-270    	; 0x7d0 <dump_config>
	for(uint8_t i = 0x0C; i <= 0x0F; i++)
     8de:	1c e0       	ldi	r17, 0x0C	; 12
	{
		dump_config(i, 1);
     8e0:	61 e0       	ldi	r22, 0x01	; 1
     8e2:	81 2f       	mov	r24, r17
     8e4:	75 df       	rcall	.-278    	; 0x7d0 <dump_config>
	{
		dump_config(i, 1);
	}
	dump_config(0x0A, 5);
	dump_config(0x0B, 5);
	for(uint8_t i = 0x0C; i <= 0x0F; i++)
     8e6:	1f 5f       	subi	r17, 0xFF	; 255
     8e8:	10 31       	cpi	r17, 0x10	; 16
     8ea:	d1 f7       	brne	.-12     	; 0x8e0 <main+0xc6>
	{
		dump_config(i, 1);
	}
	dump_config(0x10, 5);
     8ec:	65 e0       	ldi	r22, 0x05	; 5
     8ee:	80 e1       	ldi	r24, 0x10	; 16
     8f0:	6f df       	rcall	.-290    	; 0x7d0 <dump_config>
	for(uint8_t i = 0x11; i <= 0x17; i++)
     8f2:	11 e1       	ldi	r17, 0x11	; 17
	{
		dump_config(i, 1);
     8f4:	61 e0       	ldi	r22, 0x01	; 1
     8f6:	81 2f       	mov	r24, r17
     8f8:	6b df       	rcall	.-298    	; 0x7d0 <dump_config>
	for(uint8_t i = 0x0C; i <= 0x0F; i++)
	{
		dump_config(i, 1);
	}
	dump_config(0x10, 5);
	for(uint8_t i = 0x11; i <= 0x17; i++)
     8fa:	1f 5f       	subi	r17, 0xFF	; 255
     8fc:	18 31       	cpi	r17, 0x18	; 24
     8fe:	d1 f7       	brne	.-12     	; 0x8f4 <main+0xda>
	{
		dump_config(i, 1);
	}
	dump_config(0x1C, 1);
     900:	61 e0       	ldi	r22, 0x01	; 1
     902:	8c e1       	ldi	r24, 0x1C	; 28
     904:	65 df       	rcall	.-310    	; 0x7d0 <dump_config>
	dump_config(0x1D, 1);
     906:	61 e0       	ldi	r22, 0x01	; 1
     908:	8d e1       	ldi	r24, 0x1D	; 29
     90a:	62 df       	rcall	.-316    	; 0x7d0 <dump_config>
		#ifdef RX
			exit_code = core_remote_main();
			if(exit_code)
			{
				char* data = malloc(16);
				sprintf(data, "ERROR: %u\n", exit_code);
     90c:	02 e6       	ldi	r16, 0x62	; 98
     90e:	11 e0       	ldi	r17, 0x01	; 1
		core_remote_write_field(addr_two, 5, 1, str, 0, 5);
		uart_write_async("TX: DATA WRITTEN\n");
	#endif
	while(1)
    {
        set_sleep_mode(SLEEP_MODE_IDLE);
     910:	83 b7       	in	r24, 0x33	; 51
     912:	81 7f       	andi	r24, 0xF1	; 241
     914:	83 bf       	out	0x33, r24	; 51
		sleep_enable();
     916:	83 b7       	in	r24, 0x33	; 51
     918:	81 60       	ori	r24, 0x01	; 1
     91a:	83 bf       	out	0x33, r24	; 51
		sleep_cpu();
     91c:	88 95       	sleep
		#ifdef RX
			exit_code = core_remote_main();
     91e:	e8 de       	rcall	.-560    	; 0x6f0 <core_remote_main>
     920:	f8 2e       	mov	r15, r24
			if(exit_code)
     922:	88 23       	and	r24, r24
     924:	a9 f3       	breq	.-22     	; 0x910 <main+0xf6>
			{
				char* data = malloc(16);
     926:	80 e1       	ldi	r24, 0x10	; 16
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	20 d0       	rcall	.+64     	; 0x96c <malloc>
     92c:	d8 2e       	mov	r13, r24
     92e:	e9 2e       	mov	r14, r25
				sprintf(data, "ERROR: %u\n", exit_code);
     930:	1f 92       	push	r1
     932:	ff 92       	push	r15
     934:	1f 93       	push	r17
     936:	0f 93       	push	r16
     938:	9f 93       	push	r25
     93a:	8f 93       	push	r24
     93c:	47 d1       	rcall	.+654    	; 0xbcc <sprintf>
				uart_write_async(data);
     93e:	8d 2d       	mov	r24, r13
     940:	9e 2d       	mov	r25, r14
     942:	d7 db       	rcall	.-2130   	; 0xf2 <uart_write_async>
				free(data);
     944:	8d 2d       	mov	r24, r13
     946:	9e 2d       	mov	r25, r14
     948:	a9 d0       	rcall	.+338    	; 0xa9c <free>
     94a:	0f 90       	pop	r0
     94c:	0f 90       	pop	r0
     94e:	0f 90       	pop	r0
     950:	0f 90       	pop	r0
     952:	0f 90       	pop	r0
     954:	0f 90       	pop	r0
     956:	dc cf       	rjmp	.-72     	; 0x910 <main+0xf6>

00000958 <__vector_16>:
		#endif
    }
}

ISR(TIMER0_OVF_vect)
{
     958:	1f 92       	push	r1
     95a:	0f 92       	push	r0
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	0f 92       	push	r0
     960:	11 24       	eor	r1, r1
	
     962:	0f 90       	pop	r0
     964:	0f be       	out	0x3f, r0	; 63
     966:	0f 90       	pop	r0
     968:	1f 90       	pop	r1
     96a:	18 95       	reti

0000096c <malloc>:
     96c:	cf 93       	push	r28
     96e:	df 93       	push	r29
     970:	82 30       	cpi	r24, 0x02	; 2
     972:	91 05       	cpc	r25, r1
     974:	10 f4       	brcc	.+4      	; 0x97a <malloc+0xe>
     976:	82 e0       	ldi	r24, 0x02	; 2
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	e0 91 7e 02 	lds	r30, 0x027E
     97e:	f0 91 7f 02 	lds	r31, 0x027F
     982:	20 e0       	ldi	r18, 0x00	; 0
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	a0 e0       	ldi	r26, 0x00	; 0
     988:	b0 e0       	ldi	r27, 0x00	; 0
     98a:	30 97       	sbiw	r30, 0x00	; 0
     98c:	39 f1       	breq	.+78     	; 0x9dc <malloc+0x70>
     98e:	40 81       	ld	r20, Z
     990:	51 81       	ldd	r21, Z+1	; 0x01
     992:	48 17       	cp	r20, r24
     994:	59 07       	cpc	r21, r25
     996:	b8 f0       	brcs	.+46     	; 0x9c6 <malloc+0x5a>
     998:	48 17       	cp	r20, r24
     99a:	59 07       	cpc	r21, r25
     99c:	71 f4       	brne	.+28     	; 0x9ba <malloc+0x4e>
     99e:	82 81       	ldd	r24, Z+2	; 0x02
     9a0:	93 81       	ldd	r25, Z+3	; 0x03
     9a2:	10 97       	sbiw	r26, 0x00	; 0
     9a4:	29 f0       	breq	.+10     	; 0x9b0 <malloc+0x44>
     9a6:	13 96       	adiw	r26, 0x03	; 3
     9a8:	9c 93       	st	X, r25
     9aa:	8e 93       	st	-X, r24
     9ac:	12 97       	sbiw	r26, 0x02	; 2
     9ae:	2c c0       	rjmp	.+88     	; 0xa08 <malloc+0x9c>
     9b0:	90 93 7f 02 	sts	0x027F, r25
     9b4:	80 93 7e 02 	sts	0x027E, r24
     9b8:	27 c0       	rjmp	.+78     	; 0xa08 <malloc+0x9c>
     9ba:	21 15       	cp	r18, r1
     9bc:	31 05       	cpc	r19, r1
     9be:	31 f0       	breq	.+12     	; 0x9cc <malloc+0x60>
     9c0:	42 17       	cp	r20, r18
     9c2:	53 07       	cpc	r21, r19
     9c4:	18 f0       	brcs	.+6      	; 0x9cc <malloc+0x60>
     9c6:	a9 01       	movw	r20, r18
     9c8:	db 01       	movw	r26, r22
     9ca:	01 c0       	rjmp	.+2      	; 0x9ce <malloc+0x62>
     9cc:	ef 01       	movw	r28, r30
     9ce:	9a 01       	movw	r18, r20
     9d0:	bd 01       	movw	r22, r26
     9d2:	df 01       	movw	r26, r30
     9d4:	02 80       	ldd	r0, Z+2	; 0x02
     9d6:	f3 81       	ldd	r31, Z+3	; 0x03
     9d8:	e0 2d       	mov	r30, r0
     9da:	d7 cf       	rjmp	.-82     	; 0x98a <malloc+0x1e>
     9dc:	21 15       	cp	r18, r1
     9de:	31 05       	cpc	r19, r1
     9e0:	f9 f0       	breq	.+62     	; 0xa20 <malloc+0xb4>
     9e2:	28 1b       	sub	r18, r24
     9e4:	39 0b       	sbc	r19, r25
     9e6:	24 30       	cpi	r18, 0x04	; 4
     9e8:	31 05       	cpc	r19, r1
     9ea:	80 f4       	brcc	.+32     	; 0xa0c <malloc+0xa0>
     9ec:	8a 81       	ldd	r24, Y+2	; 0x02
     9ee:	9b 81       	ldd	r25, Y+3	; 0x03
     9f0:	61 15       	cp	r22, r1
     9f2:	71 05       	cpc	r23, r1
     9f4:	21 f0       	breq	.+8      	; 0x9fe <malloc+0x92>
     9f6:	fb 01       	movw	r30, r22
     9f8:	93 83       	std	Z+3, r25	; 0x03
     9fa:	82 83       	std	Z+2, r24	; 0x02
     9fc:	04 c0       	rjmp	.+8      	; 0xa06 <malloc+0x9a>
     9fe:	90 93 7f 02 	sts	0x027F, r25
     a02:	80 93 7e 02 	sts	0x027E, r24
     a06:	fe 01       	movw	r30, r28
     a08:	32 96       	adiw	r30, 0x02	; 2
     a0a:	44 c0       	rjmp	.+136    	; 0xa94 <malloc+0x128>
     a0c:	fe 01       	movw	r30, r28
     a0e:	e2 0f       	add	r30, r18
     a10:	f3 1f       	adc	r31, r19
     a12:	81 93       	st	Z+, r24
     a14:	91 93       	st	Z+, r25
     a16:	22 50       	subi	r18, 0x02	; 2
     a18:	31 09       	sbc	r19, r1
     a1a:	39 83       	std	Y+1, r19	; 0x01
     a1c:	28 83       	st	Y, r18
     a1e:	3a c0       	rjmp	.+116    	; 0xa94 <malloc+0x128>
     a20:	20 91 7c 02 	lds	r18, 0x027C
     a24:	30 91 7d 02 	lds	r19, 0x027D
     a28:	23 2b       	or	r18, r19
     a2a:	41 f4       	brne	.+16     	; 0xa3c <malloc+0xd0>
     a2c:	20 91 02 01 	lds	r18, 0x0102
     a30:	30 91 03 01 	lds	r19, 0x0103
     a34:	30 93 7d 02 	sts	0x027D, r19
     a38:	20 93 7c 02 	sts	0x027C, r18
     a3c:	20 91 00 01 	lds	r18, 0x0100
     a40:	30 91 01 01 	lds	r19, 0x0101
     a44:	21 15       	cp	r18, r1
     a46:	31 05       	cpc	r19, r1
     a48:	41 f4       	brne	.+16     	; 0xa5a <malloc+0xee>
     a4a:	2d b7       	in	r18, 0x3d	; 61
     a4c:	3e b7       	in	r19, 0x3e	; 62
     a4e:	40 91 04 01 	lds	r20, 0x0104
     a52:	50 91 05 01 	lds	r21, 0x0105
     a56:	24 1b       	sub	r18, r20
     a58:	35 0b       	sbc	r19, r21
     a5a:	e0 91 7c 02 	lds	r30, 0x027C
     a5e:	f0 91 7d 02 	lds	r31, 0x027D
     a62:	e2 17       	cp	r30, r18
     a64:	f3 07       	cpc	r31, r19
     a66:	a0 f4       	brcc	.+40     	; 0xa90 <malloc+0x124>
     a68:	2e 1b       	sub	r18, r30
     a6a:	3f 0b       	sbc	r19, r31
     a6c:	28 17       	cp	r18, r24
     a6e:	39 07       	cpc	r19, r25
     a70:	78 f0       	brcs	.+30     	; 0xa90 <malloc+0x124>
     a72:	ac 01       	movw	r20, r24
     a74:	4e 5f       	subi	r20, 0xFE	; 254
     a76:	5f 4f       	sbci	r21, 0xFF	; 255
     a78:	24 17       	cp	r18, r20
     a7a:	35 07       	cpc	r19, r21
     a7c:	48 f0       	brcs	.+18     	; 0xa90 <malloc+0x124>
     a7e:	4e 0f       	add	r20, r30
     a80:	5f 1f       	adc	r21, r31
     a82:	50 93 7d 02 	sts	0x027D, r21
     a86:	40 93 7c 02 	sts	0x027C, r20
     a8a:	81 93       	st	Z+, r24
     a8c:	91 93       	st	Z+, r25
     a8e:	02 c0       	rjmp	.+4      	; 0xa94 <malloc+0x128>
     a90:	e0 e0       	ldi	r30, 0x00	; 0
     a92:	f0 e0       	ldi	r31, 0x00	; 0
     a94:	cf 01       	movw	r24, r30
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	08 95       	ret

00000a9c <free>:
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	00 97       	sbiw	r24, 0x00	; 0
     aa2:	09 f4       	brne	.+2      	; 0xaa6 <free+0xa>
     aa4:	87 c0       	rjmp	.+270    	; 0xbb4 <free+0x118>
     aa6:	fc 01       	movw	r30, r24
     aa8:	32 97       	sbiw	r30, 0x02	; 2
     aaa:	13 82       	std	Z+3, r1	; 0x03
     aac:	12 82       	std	Z+2, r1	; 0x02
     aae:	c0 91 7e 02 	lds	r28, 0x027E
     ab2:	d0 91 7f 02 	lds	r29, 0x027F
     ab6:	20 97       	sbiw	r28, 0x00	; 0
     ab8:	81 f4       	brne	.+32     	; 0xada <free+0x3e>
     aba:	20 81       	ld	r18, Z
     abc:	31 81       	ldd	r19, Z+1	; 0x01
     abe:	28 0f       	add	r18, r24
     ac0:	39 1f       	adc	r19, r25
     ac2:	80 91 7c 02 	lds	r24, 0x027C
     ac6:	90 91 7d 02 	lds	r25, 0x027D
     aca:	82 17       	cp	r24, r18
     acc:	93 07       	cpc	r25, r19
     ace:	79 f5       	brne	.+94     	; 0xb2e <free+0x92>
     ad0:	f0 93 7d 02 	sts	0x027D, r31
     ad4:	e0 93 7c 02 	sts	0x027C, r30
     ad8:	6d c0       	rjmp	.+218    	; 0xbb4 <free+0x118>
     ada:	de 01       	movw	r26, r28
     adc:	20 e0       	ldi	r18, 0x00	; 0
     ade:	30 e0       	ldi	r19, 0x00	; 0
     ae0:	ae 17       	cp	r26, r30
     ae2:	bf 07       	cpc	r27, r31
     ae4:	50 f4       	brcc	.+20     	; 0xafa <free+0x5e>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	4d 91       	ld	r20, X+
     aea:	5c 91       	ld	r21, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	9d 01       	movw	r18, r26
     af0:	41 15       	cp	r20, r1
     af2:	51 05       	cpc	r21, r1
     af4:	09 f1       	breq	.+66     	; 0xb38 <free+0x9c>
     af6:	da 01       	movw	r26, r20
     af8:	f3 cf       	rjmp	.-26     	; 0xae0 <free+0x44>
     afa:	b3 83       	std	Z+3, r27	; 0x03
     afc:	a2 83       	std	Z+2, r26	; 0x02
     afe:	40 81       	ld	r20, Z
     b00:	51 81       	ldd	r21, Z+1	; 0x01
     b02:	84 0f       	add	r24, r20
     b04:	95 1f       	adc	r25, r21
     b06:	8a 17       	cp	r24, r26
     b08:	9b 07       	cpc	r25, r27
     b0a:	71 f4       	brne	.+28     	; 0xb28 <free+0x8c>
     b0c:	8d 91       	ld	r24, X+
     b0e:	9c 91       	ld	r25, X
     b10:	11 97       	sbiw	r26, 0x01	; 1
     b12:	84 0f       	add	r24, r20
     b14:	95 1f       	adc	r25, r21
     b16:	02 96       	adiw	r24, 0x02	; 2
     b18:	91 83       	std	Z+1, r25	; 0x01
     b1a:	80 83       	st	Z, r24
     b1c:	12 96       	adiw	r26, 0x02	; 2
     b1e:	8d 91       	ld	r24, X+
     b20:	9c 91       	ld	r25, X
     b22:	13 97       	sbiw	r26, 0x03	; 3
     b24:	93 83       	std	Z+3, r25	; 0x03
     b26:	82 83       	std	Z+2, r24	; 0x02
     b28:	21 15       	cp	r18, r1
     b2a:	31 05       	cpc	r19, r1
     b2c:	29 f4       	brne	.+10     	; 0xb38 <free+0x9c>
     b2e:	f0 93 7f 02 	sts	0x027F, r31
     b32:	e0 93 7e 02 	sts	0x027E, r30
     b36:	3e c0       	rjmp	.+124    	; 0xbb4 <free+0x118>
     b38:	d9 01       	movw	r26, r18
     b3a:	13 96       	adiw	r26, 0x03	; 3
     b3c:	fc 93       	st	X, r31
     b3e:	ee 93       	st	-X, r30
     b40:	12 97       	sbiw	r26, 0x02	; 2
     b42:	4d 91       	ld	r20, X+
     b44:	5d 91       	ld	r21, X+
     b46:	a4 0f       	add	r26, r20
     b48:	b5 1f       	adc	r27, r21
     b4a:	ea 17       	cp	r30, r26
     b4c:	fb 07       	cpc	r31, r27
     b4e:	79 f4       	brne	.+30     	; 0xb6e <free+0xd2>
     b50:	80 81       	ld	r24, Z
     b52:	91 81       	ldd	r25, Z+1	; 0x01
     b54:	84 0f       	add	r24, r20
     b56:	95 1f       	adc	r25, r21
     b58:	02 96       	adiw	r24, 0x02	; 2
     b5a:	d9 01       	movw	r26, r18
     b5c:	11 96       	adiw	r26, 0x01	; 1
     b5e:	9c 93       	st	X, r25
     b60:	8e 93       	st	-X, r24
     b62:	82 81       	ldd	r24, Z+2	; 0x02
     b64:	93 81       	ldd	r25, Z+3	; 0x03
     b66:	13 96       	adiw	r26, 0x03	; 3
     b68:	9c 93       	st	X, r25
     b6a:	8e 93       	st	-X, r24
     b6c:	12 97       	sbiw	r26, 0x02	; 2
     b6e:	e0 e0       	ldi	r30, 0x00	; 0
     b70:	f0 e0       	ldi	r31, 0x00	; 0
     b72:	8a 81       	ldd	r24, Y+2	; 0x02
     b74:	9b 81       	ldd	r25, Y+3	; 0x03
     b76:	00 97       	sbiw	r24, 0x00	; 0
     b78:	19 f0       	breq	.+6      	; 0xb80 <free+0xe4>
     b7a:	fe 01       	movw	r30, r28
     b7c:	ec 01       	movw	r28, r24
     b7e:	f9 cf       	rjmp	.-14     	; 0xb72 <free+0xd6>
     b80:	ce 01       	movw	r24, r28
     b82:	02 96       	adiw	r24, 0x02	; 2
     b84:	28 81       	ld	r18, Y
     b86:	39 81       	ldd	r19, Y+1	; 0x01
     b88:	82 0f       	add	r24, r18
     b8a:	93 1f       	adc	r25, r19
     b8c:	20 91 7c 02 	lds	r18, 0x027C
     b90:	30 91 7d 02 	lds	r19, 0x027D
     b94:	28 17       	cp	r18, r24
     b96:	39 07       	cpc	r19, r25
     b98:	69 f4       	brne	.+26     	; 0xbb4 <free+0x118>
     b9a:	30 97       	sbiw	r30, 0x00	; 0
     b9c:	29 f4       	brne	.+10     	; 0xba8 <free+0x10c>
     b9e:	10 92 7f 02 	sts	0x027F, r1
     ba2:	10 92 7e 02 	sts	0x027E, r1
     ba6:	02 c0       	rjmp	.+4      	; 0xbac <free+0x110>
     ba8:	13 82       	std	Z+3, r1	; 0x03
     baa:	12 82       	std	Z+2, r1	; 0x02
     bac:	d0 93 7d 02 	sts	0x027D, r29
     bb0:	c0 93 7c 02 	sts	0x027C, r28
     bb4:	df 91       	pop	r29
     bb6:	cf 91       	pop	r28
     bb8:	08 95       	ret

00000bba <memcpy>:
     bba:	fb 01       	movw	r30, r22
     bbc:	dc 01       	movw	r26, r24
     bbe:	02 c0       	rjmp	.+4      	; 0xbc4 <memcpy+0xa>
     bc0:	01 90       	ld	r0, Z+
     bc2:	0d 92       	st	X+, r0
     bc4:	41 50       	subi	r20, 0x01	; 1
     bc6:	50 40       	sbci	r21, 0x00	; 0
     bc8:	d8 f7       	brcc	.-10     	; 0xbc0 <memcpy+0x6>
     bca:	08 95       	ret

00000bcc <sprintf>:
     bcc:	ae e0       	ldi	r26, 0x0E	; 14
     bce:	b0 e0       	ldi	r27, 0x00	; 0
     bd0:	eb ee       	ldi	r30, 0xEB	; 235
     bd2:	f5 e0       	ldi	r31, 0x05	; 5
     bd4:	91 c2       	rjmp	.+1314   	; 0x10f8 <__prologue_saves__+0x1c>
     bd6:	0d 89       	ldd	r16, Y+21	; 0x15
     bd8:	1e 89       	ldd	r17, Y+22	; 0x16
     bda:	86 e0       	ldi	r24, 0x06	; 6
     bdc:	8c 83       	std	Y+4, r24	; 0x04
     bde:	1a 83       	std	Y+2, r17	; 0x02
     be0:	09 83       	std	Y+1, r16	; 0x01
     be2:	8f ef       	ldi	r24, 0xFF	; 255
     be4:	9f e7       	ldi	r25, 0x7F	; 127
     be6:	9e 83       	std	Y+6, r25	; 0x06
     be8:	8d 83       	std	Y+5, r24	; 0x05
     bea:	ae 01       	movw	r20, r28
     bec:	47 5e       	subi	r20, 0xE7	; 231
     bee:	5f 4f       	sbci	r21, 0xFF	; 255
     bf0:	6f 89       	ldd	r22, Y+23	; 0x17
     bf2:	78 8d       	ldd	r23, Y+24	; 0x18
     bf4:	ce 01       	movw	r24, r28
     bf6:	01 96       	adiw	r24, 0x01	; 1
     bf8:	08 d0       	rcall	.+16     	; 0xc0a <vfprintf>
     bfa:	ef 81       	ldd	r30, Y+7	; 0x07
     bfc:	f8 85       	ldd	r31, Y+8	; 0x08
     bfe:	e0 0f       	add	r30, r16
     c00:	f1 1f       	adc	r31, r17
     c02:	10 82       	st	Z, r1
     c04:	2e 96       	adiw	r28, 0x0e	; 14
     c06:	e4 e0       	ldi	r30, 0x04	; 4
     c08:	93 c2       	rjmp	.+1318   	; 0x1130 <__epilogue_restores__+0x1c>

00000c0a <vfprintf>:
     c0a:	ac e0       	ldi	r26, 0x0C	; 12
     c0c:	b0 e0       	ldi	r27, 0x00	; 0
     c0e:	ea e0       	ldi	r30, 0x0A	; 10
     c10:	f6 e0       	ldi	r31, 0x06	; 6
     c12:	64 c2       	rjmp	.+1224   	; 0x10dc <__prologue_saves__>
     c14:	7c 01       	movw	r14, r24
     c16:	6b 01       	movw	r12, r22
     c18:	8a 01       	movw	r16, r20
     c1a:	fc 01       	movw	r30, r24
     c1c:	17 82       	std	Z+7, r1	; 0x07
     c1e:	16 82       	std	Z+6, r1	; 0x06
     c20:	83 81       	ldd	r24, Z+3	; 0x03
     c22:	81 ff       	sbrs	r24, 1
     c24:	b0 c1       	rjmp	.+864    	; 0xf86 <vfprintf+0x37c>
     c26:	ce 01       	movw	r24, r28
     c28:	01 96       	adiw	r24, 0x01	; 1
     c2a:	4c 01       	movw	r8, r24
     c2c:	f7 01       	movw	r30, r14
     c2e:	93 81       	ldd	r25, Z+3	; 0x03
     c30:	f6 01       	movw	r30, r12
     c32:	93 fd       	sbrc	r25, 3
     c34:	85 91       	lpm	r24, Z+
     c36:	93 ff       	sbrs	r25, 3
     c38:	81 91       	ld	r24, Z+
     c3a:	6f 01       	movw	r12, r30
     c3c:	88 23       	and	r24, r24
     c3e:	09 f4       	brne	.+2      	; 0xc42 <vfprintf+0x38>
     c40:	9e c1       	rjmp	.+828    	; 0xf7e <vfprintf+0x374>
     c42:	85 32       	cpi	r24, 0x25	; 37
     c44:	39 f4       	brne	.+14     	; 0xc54 <vfprintf+0x4a>
     c46:	93 fd       	sbrc	r25, 3
     c48:	85 91       	lpm	r24, Z+
     c4a:	93 ff       	sbrs	r25, 3
     c4c:	81 91       	ld	r24, Z+
     c4e:	6f 01       	movw	r12, r30
     c50:	85 32       	cpi	r24, 0x25	; 37
     c52:	21 f4       	brne	.+8      	; 0xc5c <vfprintf+0x52>
     c54:	b7 01       	movw	r22, r14
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	b1 d1       	rcall	.+866    	; 0xfbc <fputc>
     c5a:	e8 cf       	rjmp	.-48     	; 0xc2c <vfprintf+0x22>
     c5c:	51 2c       	mov	r5, r1
     c5e:	31 2c       	mov	r3, r1
     c60:	20 e0       	ldi	r18, 0x00	; 0
     c62:	20 32       	cpi	r18, 0x20	; 32
     c64:	a0 f4       	brcc	.+40     	; 0xc8e <vfprintf+0x84>
     c66:	8b 32       	cpi	r24, 0x2B	; 43
     c68:	69 f0       	breq	.+26     	; 0xc84 <vfprintf+0x7a>
     c6a:	30 f4       	brcc	.+12     	; 0xc78 <vfprintf+0x6e>
     c6c:	80 32       	cpi	r24, 0x20	; 32
     c6e:	59 f0       	breq	.+22     	; 0xc86 <vfprintf+0x7c>
     c70:	83 32       	cpi	r24, 0x23	; 35
     c72:	69 f4       	brne	.+26     	; 0xc8e <vfprintf+0x84>
     c74:	20 61       	ori	r18, 0x10	; 16
     c76:	2c c0       	rjmp	.+88     	; 0xcd0 <vfprintf+0xc6>
     c78:	8d 32       	cpi	r24, 0x2D	; 45
     c7a:	39 f0       	breq	.+14     	; 0xc8a <vfprintf+0x80>
     c7c:	80 33       	cpi	r24, 0x30	; 48
     c7e:	39 f4       	brne	.+14     	; 0xc8e <vfprintf+0x84>
     c80:	21 60       	ori	r18, 0x01	; 1
     c82:	26 c0       	rjmp	.+76     	; 0xcd0 <vfprintf+0xc6>
     c84:	22 60       	ori	r18, 0x02	; 2
     c86:	24 60       	ori	r18, 0x04	; 4
     c88:	23 c0       	rjmp	.+70     	; 0xcd0 <vfprintf+0xc6>
     c8a:	28 60       	ori	r18, 0x08	; 8
     c8c:	21 c0       	rjmp	.+66     	; 0xcd0 <vfprintf+0xc6>
     c8e:	27 fd       	sbrc	r18, 7
     c90:	27 c0       	rjmp	.+78     	; 0xce0 <vfprintf+0xd6>
     c92:	30 ed       	ldi	r19, 0xD0	; 208
     c94:	38 0f       	add	r19, r24
     c96:	3a 30       	cpi	r19, 0x0A	; 10
     c98:	78 f4       	brcc	.+30     	; 0xcb8 <vfprintf+0xae>
     c9a:	26 ff       	sbrs	r18, 6
     c9c:	06 c0       	rjmp	.+12     	; 0xcaa <vfprintf+0xa0>
     c9e:	fa e0       	ldi	r31, 0x0A	; 10
     ca0:	5f 9e       	mul	r5, r31
     ca2:	30 0d       	add	r19, r0
     ca4:	11 24       	eor	r1, r1
     ca6:	53 2e       	mov	r5, r19
     ca8:	13 c0       	rjmp	.+38     	; 0xcd0 <vfprintf+0xc6>
     caa:	8a e0       	ldi	r24, 0x0A	; 10
     cac:	38 9e       	mul	r3, r24
     cae:	30 0d       	add	r19, r0
     cb0:	11 24       	eor	r1, r1
     cb2:	33 2e       	mov	r3, r19
     cb4:	20 62       	ori	r18, 0x20	; 32
     cb6:	0c c0       	rjmp	.+24     	; 0xcd0 <vfprintf+0xc6>
     cb8:	8e 32       	cpi	r24, 0x2E	; 46
     cba:	21 f4       	brne	.+8      	; 0xcc4 <vfprintf+0xba>
     cbc:	26 fd       	sbrc	r18, 6
     cbe:	5f c1       	rjmp	.+702    	; 0xf7e <vfprintf+0x374>
     cc0:	20 64       	ori	r18, 0x40	; 64
     cc2:	06 c0       	rjmp	.+12     	; 0xcd0 <vfprintf+0xc6>
     cc4:	8c 36       	cpi	r24, 0x6C	; 108
     cc6:	11 f4       	brne	.+4      	; 0xccc <vfprintf+0xc2>
     cc8:	20 68       	ori	r18, 0x80	; 128
     cca:	02 c0       	rjmp	.+4      	; 0xcd0 <vfprintf+0xc6>
     ccc:	88 36       	cpi	r24, 0x68	; 104
     cce:	41 f4       	brne	.+16     	; 0xce0 <vfprintf+0xd6>
     cd0:	f6 01       	movw	r30, r12
     cd2:	93 fd       	sbrc	r25, 3
     cd4:	85 91       	lpm	r24, Z+
     cd6:	93 ff       	sbrs	r25, 3
     cd8:	81 91       	ld	r24, Z+
     cda:	6f 01       	movw	r12, r30
     cdc:	81 11       	cpse	r24, r1
     cde:	c1 cf       	rjmp	.-126    	; 0xc62 <vfprintf+0x58>
     ce0:	98 2f       	mov	r25, r24
     ce2:	9f 7d       	andi	r25, 0xDF	; 223
     ce4:	95 54       	subi	r25, 0x45	; 69
     ce6:	93 30       	cpi	r25, 0x03	; 3
     ce8:	28 f4       	brcc	.+10     	; 0xcf4 <vfprintf+0xea>
     cea:	0c 5f       	subi	r16, 0xFC	; 252
     cec:	1f 4f       	sbci	r17, 0xFF	; 255
     cee:	ff e3       	ldi	r31, 0x3F	; 63
     cf0:	f9 83       	std	Y+1, r31	; 0x01
     cf2:	0d c0       	rjmp	.+26     	; 0xd0e <vfprintf+0x104>
     cf4:	83 36       	cpi	r24, 0x63	; 99
     cf6:	31 f0       	breq	.+12     	; 0xd04 <vfprintf+0xfa>
     cf8:	83 37       	cpi	r24, 0x73	; 115
     cfa:	71 f0       	breq	.+28     	; 0xd18 <vfprintf+0x10e>
     cfc:	83 35       	cpi	r24, 0x53	; 83
     cfe:	09 f0       	breq	.+2      	; 0xd02 <vfprintf+0xf8>
     d00:	57 c0       	rjmp	.+174    	; 0xdb0 <vfprintf+0x1a6>
     d02:	21 c0       	rjmp	.+66     	; 0xd46 <vfprintf+0x13c>
     d04:	f8 01       	movw	r30, r16
     d06:	80 81       	ld	r24, Z
     d08:	89 83       	std	Y+1, r24	; 0x01
     d0a:	0e 5f       	subi	r16, 0xFE	; 254
     d0c:	1f 4f       	sbci	r17, 0xFF	; 255
     d0e:	44 24       	eor	r4, r4
     d10:	43 94       	inc	r4
     d12:	51 2c       	mov	r5, r1
     d14:	54 01       	movw	r10, r8
     d16:	14 c0       	rjmp	.+40     	; 0xd40 <vfprintf+0x136>
     d18:	38 01       	movw	r6, r16
     d1a:	f2 e0       	ldi	r31, 0x02	; 2
     d1c:	6f 0e       	add	r6, r31
     d1e:	71 1c       	adc	r7, r1
     d20:	f8 01       	movw	r30, r16
     d22:	a0 80       	ld	r10, Z
     d24:	b1 80       	ldd	r11, Z+1	; 0x01
     d26:	26 ff       	sbrs	r18, 6
     d28:	03 c0       	rjmp	.+6      	; 0xd30 <vfprintf+0x126>
     d2a:	65 2d       	mov	r22, r5
     d2c:	70 e0       	ldi	r23, 0x00	; 0
     d2e:	02 c0       	rjmp	.+4      	; 0xd34 <vfprintf+0x12a>
     d30:	6f ef       	ldi	r22, 0xFF	; 255
     d32:	7f ef       	ldi	r23, 0xFF	; 255
     d34:	c5 01       	movw	r24, r10
     d36:	2c 87       	std	Y+12, r18	; 0x0c
     d38:	36 d1       	rcall	.+620    	; 0xfa6 <strnlen>
     d3a:	2c 01       	movw	r4, r24
     d3c:	83 01       	movw	r16, r6
     d3e:	2c 85       	ldd	r18, Y+12	; 0x0c
     d40:	2f 77       	andi	r18, 0x7F	; 127
     d42:	22 2e       	mov	r2, r18
     d44:	16 c0       	rjmp	.+44     	; 0xd72 <vfprintf+0x168>
     d46:	38 01       	movw	r6, r16
     d48:	f2 e0       	ldi	r31, 0x02	; 2
     d4a:	6f 0e       	add	r6, r31
     d4c:	71 1c       	adc	r7, r1
     d4e:	f8 01       	movw	r30, r16
     d50:	a0 80       	ld	r10, Z
     d52:	b1 80       	ldd	r11, Z+1	; 0x01
     d54:	26 ff       	sbrs	r18, 6
     d56:	03 c0       	rjmp	.+6      	; 0xd5e <vfprintf+0x154>
     d58:	65 2d       	mov	r22, r5
     d5a:	70 e0       	ldi	r23, 0x00	; 0
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <vfprintf+0x158>
     d5e:	6f ef       	ldi	r22, 0xFF	; 255
     d60:	7f ef       	ldi	r23, 0xFF	; 255
     d62:	c5 01       	movw	r24, r10
     d64:	2c 87       	std	Y+12, r18	; 0x0c
     d66:	14 d1       	rcall	.+552    	; 0xf90 <strnlen_P>
     d68:	2c 01       	movw	r4, r24
     d6a:	2c 85       	ldd	r18, Y+12	; 0x0c
     d6c:	20 68       	ori	r18, 0x80	; 128
     d6e:	22 2e       	mov	r2, r18
     d70:	83 01       	movw	r16, r6
     d72:	23 fc       	sbrc	r2, 3
     d74:	19 c0       	rjmp	.+50     	; 0xda8 <vfprintf+0x19e>
     d76:	83 2d       	mov	r24, r3
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	48 16       	cp	r4, r24
     d7c:	59 06       	cpc	r5, r25
     d7e:	a0 f4       	brcc	.+40     	; 0xda8 <vfprintf+0x19e>
     d80:	b7 01       	movw	r22, r14
     d82:	80 e2       	ldi	r24, 0x20	; 32
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	1a d1       	rcall	.+564    	; 0xfbc <fputc>
     d88:	3a 94       	dec	r3
     d8a:	f5 cf       	rjmp	.-22     	; 0xd76 <vfprintf+0x16c>
     d8c:	f5 01       	movw	r30, r10
     d8e:	27 fc       	sbrc	r2, 7
     d90:	85 91       	lpm	r24, Z+
     d92:	27 fe       	sbrs	r2, 7
     d94:	81 91       	ld	r24, Z+
     d96:	5f 01       	movw	r10, r30
     d98:	b7 01       	movw	r22, r14
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	0f d1       	rcall	.+542    	; 0xfbc <fputc>
     d9e:	31 10       	cpse	r3, r1
     da0:	3a 94       	dec	r3
     da2:	f1 e0       	ldi	r31, 0x01	; 1
     da4:	4f 1a       	sub	r4, r31
     da6:	51 08       	sbc	r5, r1
     da8:	41 14       	cp	r4, r1
     daa:	51 04       	cpc	r5, r1
     dac:	79 f7       	brne	.-34     	; 0xd8c <vfprintf+0x182>
     dae:	de c0       	rjmp	.+444    	; 0xf6c <vfprintf+0x362>
     db0:	84 36       	cpi	r24, 0x64	; 100
     db2:	11 f0       	breq	.+4      	; 0xdb8 <vfprintf+0x1ae>
     db4:	89 36       	cpi	r24, 0x69	; 105
     db6:	31 f5       	brne	.+76     	; 0xe04 <vfprintf+0x1fa>
     db8:	f8 01       	movw	r30, r16
     dba:	27 ff       	sbrs	r18, 7
     dbc:	07 c0       	rjmp	.+14     	; 0xdcc <vfprintf+0x1c2>
     dbe:	60 81       	ld	r22, Z
     dc0:	71 81       	ldd	r23, Z+1	; 0x01
     dc2:	82 81       	ldd	r24, Z+2	; 0x02
     dc4:	93 81       	ldd	r25, Z+3	; 0x03
     dc6:	0c 5f       	subi	r16, 0xFC	; 252
     dc8:	1f 4f       	sbci	r17, 0xFF	; 255
     dca:	08 c0       	rjmp	.+16     	; 0xddc <vfprintf+0x1d2>
     dcc:	60 81       	ld	r22, Z
     dce:	71 81       	ldd	r23, Z+1	; 0x01
     dd0:	88 27       	eor	r24, r24
     dd2:	77 fd       	sbrc	r23, 7
     dd4:	80 95       	com	r24
     dd6:	98 2f       	mov	r25, r24
     dd8:	0e 5f       	subi	r16, 0xFE	; 254
     dda:	1f 4f       	sbci	r17, 0xFF	; 255
     ddc:	2f 76       	andi	r18, 0x6F	; 111
     dde:	b2 2e       	mov	r11, r18
     de0:	97 ff       	sbrs	r25, 7
     de2:	09 c0       	rjmp	.+18     	; 0xdf6 <vfprintf+0x1ec>
     de4:	90 95       	com	r25
     de6:	80 95       	com	r24
     de8:	70 95       	com	r23
     dea:	61 95       	neg	r22
     dec:	7f 4f       	sbci	r23, 0xFF	; 255
     dee:	8f 4f       	sbci	r24, 0xFF	; 255
     df0:	9f 4f       	sbci	r25, 0xFF	; 255
     df2:	20 68       	ori	r18, 0x80	; 128
     df4:	b2 2e       	mov	r11, r18
     df6:	2a e0       	ldi	r18, 0x0A	; 10
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	a4 01       	movw	r20, r8
     dfc:	11 d1       	rcall	.+546    	; 0x1020 <__ultoa_invert>
     dfe:	a8 2e       	mov	r10, r24
     e00:	a8 18       	sub	r10, r8
     e02:	43 c0       	rjmp	.+134    	; 0xe8a <vfprintf+0x280>
     e04:	85 37       	cpi	r24, 0x75	; 117
     e06:	29 f4       	brne	.+10     	; 0xe12 <vfprintf+0x208>
     e08:	2f 7e       	andi	r18, 0xEF	; 239
     e0a:	b2 2e       	mov	r11, r18
     e0c:	2a e0       	ldi	r18, 0x0A	; 10
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	25 c0       	rjmp	.+74     	; 0xe5c <vfprintf+0x252>
     e12:	f2 2f       	mov	r31, r18
     e14:	f9 7f       	andi	r31, 0xF9	; 249
     e16:	bf 2e       	mov	r11, r31
     e18:	8f 36       	cpi	r24, 0x6F	; 111
     e1a:	c1 f0       	breq	.+48     	; 0xe4c <vfprintf+0x242>
     e1c:	18 f4       	brcc	.+6      	; 0xe24 <vfprintf+0x21a>
     e1e:	88 35       	cpi	r24, 0x58	; 88
     e20:	79 f0       	breq	.+30     	; 0xe40 <vfprintf+0x236>
     e22:	ad c0       	rjmp	.+346    	; 0xf7e <vfprintf+0x374>
     e24:	80 37       	cpi	r24, 0x70	; 112
     e26:	19 f0       	breq	.+6      	; 0xe2e <vfprintf+0x224>
     e28:	88 37       	cpi	r24, 0x78	; 120
     e2a:	21 f0       	breq	.+8      	; 0xe34 <vfprintf+0x22a>
     e2c:	a8 c0       	rjmp	.+336    	; 0xf7e <vfprintf+0x374>
     e2e:	2f 2f       	mov	r18, r31
     e30:	20 61       	ori	r18, 0x10	; 16
     e32:	b2 2e       	mov	r11, r18
     e34:	b4 fe       	sbrs	r11, 4
     e36:	0d c0       	rjmp	.+26     	; 0xe52 <vfprintf+0x248>
     e38:	8b 2d       	mov	r24, r11
     e3a:	84 60       	ori	r24, 0x04	; 4
     e3c:	b8 2e       	mov	r11, r24
     e3e:	09 c0       	rjmp	.+18     	; 0xe52 <vfprintf+0x248>
     e40:	24 ff       	sbrs	r18, 4
     e42:	0a c0       	rjmp	.+20     	; 0xe58 <vfprintf+0x24e>
     e44:	9f 2f       	mov	r25, r31
     e46:	96 60       	ori	r25, 0x06	; 6
     e48:	b9 2e       	mov	r11, r25
     e4a:	06 c0       	rjmp	.+12     	; 0xe58 <vfprintf+0x24e>
     e4c:	28 e0       	ldi	r18, 0x08	; 8
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	05 c0       	rjmp	.+10     	; 0xe5c <vfprintf+0x252>
     e52:	20 e1       	ldi	r18, 0x10	; 16
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	02 c0       	rjmp	.+4      	; 0xe5c <vfprintf+0x252>
     e58:	20 e1       	ldi	r18, 0x10	; 16
     e5a:	32 e0       	ldi	r19, 0x02	; 2
     e5c:	f8 01       	movw	r30, r16
     e5e:	b7 fe       	sbrs	r11, 7
     e60:	07 c0       	rjmp	.+14     	; 0xe70 <vfprintf+0x266>
     e62:	60 81       	ld	r22, Z
     e64:	71 81       	ldd	r23, Z+1	; 0x01
     e66:	82 81       	ldd	r24, Z+2	; 0x02
     e68:	93 81       	ldd	r25, Z+3	; 0x03
     e6a:	0c 5f       	subi	r16, 0xFC	; 252
     e6c:	1f 4f       	sbci	r17, 0xFF	; 255
     e6e:	06 c0       	rjmp	.+12     	; 0xe7c <vfprintf+0x272>
     e70:	60 81       	ld	r22, Z
     e72:	71 81       	ldd	r23, Z+1	; 0x01
     e74:	80 e0       	ldi	r24, 0x00	; 0
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	0e 5f       	subi	r16, 0xFE	; 254
     e7a:	1f 4f       	sbci	r17, 0xFF	; 255
     e7c:	a4 01       	movw	r20, r8
     e7e:	d0 d0       	rcall	.+416    	; 0x1020 <__ultoa_invert>
     e80:	a8 2e       	mov	r10, r24
     e82:	a8 18       	sub	r10, r8
     e84:	fb 2d       	mov	r31, r11
     e86:	ff 77       	andi	r31, 0x7F	; 127
     e88:	bf 2e       	mov	r11, r31
     e8a:	b6 fe       	sbrs	r11, 6
     e8c:	0b c0       	rjmp	.+22     	; 0xea4 <vfprintf+0x29a>
     e8e:	2b 2d       	mov	r18, r11
     e90:	2e 7f       	andi	r18, 0xFE	; 254
     e92:	a5 14       	cp	r10, r5
     e94:	50 f4       	brcc	.+20     	; 0xeaa <vfprintf+0x2a0>
     e96:	b4 fe       	sbrs	r11, 4
     e98:	0a c0       	rjmp	.+20     	; 0xeae <vfprintf+0x2a4>
     e9a:	b2 fc       	sbrc	r11, 2
     e9c:	08 c0       	rjmp	.+16     	; 0xeae <vfprintf+0x2a4>
     e9e:	2b 2d       	mov	r18, r11
     ea0:	2e 7e       	andi	r18, 0xEE	; 238
     ea2:	05 c0       	rjmp	.+10     	; 0xeae <vfprintf+0x2a4>
     ea4:	7a 2c       	mov	r7, r10
     ea6:	2b 2d       	mov	r18, r11
     ea8:	03 c0       	rjmp	.+6      	; 0xeb0 <vfprintf+0x2a6>
     eaa:	7a 2c       	mov	r7, r10
     eac:	01 c0       	rjmp	.+2      	; 0xeb0 <vfprintf+0x2a6>
     eae:	75 2c       	mov	r7, r5
     eb0:	24 ff       	sbrs	r18, 4
     eb2:	0d c0       	rjmp	.+26     	; 0xece <vfprintf+0x2c4>
     eb4:	fe 01       	movw	r30, r28
     eb6:	ea 0d       	add	r30, r10
     eb8:	f1 1d       	adc	r31, r1
     eba:	80 81       	ld	r24, Z
     ebc:	80 33       	cpi	r24, 0x30	; 48
     ebe:	11 f4       	brne	.+4      	; 0xec4 <vfprintf+0x2ba>
     ec0:	29 7e       	andi	r18, 0xE9	; 233
     ec2:	09 c0       	rjmp	.+18     	; 0xed6 <vfprintf+0x2cc>
     ec4:	22 ff       	sbrs	r18, 2
     ec6:	06 c0       	rjmp	.+12     	; 0xed4 <vfprintf+0x2ca>
     ec8:	73 94       	inc	r7
     eca:	73 94       	inc	r7
     ecc:	04 c0       	rjmp	.+8      	; 0xed6 <vfprintf+0x2cc>
     ece:	82 2f       	mov	r24, r18
     ed0:	86 78       	andi	r24, 0x86	; 134
     ed2:	09 f0       	breq	.+2      	; 0xed6 <vfprintf+0x2cc>
     ed4:	73 94       	inc	r7
     ed6:	23 fd       	sbrc	r18, 3
     ed8:	12 c0       	rjmp	.+36     	; 0xefe <vfprintf+0x2f4>
     eda:	20 ff       	sbrs	r18, 0
     edc:	06 c0       	rjmp	.+12     	; 0xeea <vfprintf+0x2e0>
     ede:	5a 2c       	mov	r5, r10
     ee0:	73 14       	cp	r7, r3
     ee2:	18 f4       	brcc	.+6      	; 0xeea <vfprintf+0x2e0>
     ee4:	53 0c       	add	r5, r3
     ee6:	57 18       	sub	r5, r7
     ee8:	73 2c       	mov	r7, r3
     eea:	73 14       	cp	r7, r3
     eec:	60 f4       	brcc	.+24     	; 0xf06 <vfprintf+0x2fc>
     eee:	b7 01       	movw	r22, r14
     ef0:	80 e2       	ldi	r24, 0x20	; 32
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	2c 87       	std	Y+12, r18	; 0x0c
     ef6:	62 d0       	rcall	.+196    	; 0xfbc <fputc>
     ef8:	73 94       	inc	r7
     efa:	2c 85       	ldd	r18, Y+12	; 0x0c
     efc:	f6 cf       	rjmp	.-20     	; 0xeea <vfprintf+0x2e0>
     efe:	73 14       	cp	r7, r3
     f00:	10 f4       	brcc	.+4      	; 0xf06 <vfprintf+0x2fc>
     f02:	37 18       	sub	r3, r7
     f04:	01 c0       	rjmp	.+2      	; 0xf08 <vfprintf+0x2fe>
     f06:	31 2c       	mov	r3, r1
     f08:	24 ff       	sbrs	r18, 4
     f0a:	11 c0       	rjmp	.+34     	; 0xf2e <vfprintf+0x324>
     f0c:	b7 01       	movw	r22, r14
     f0e:	80 e3       	ldi	r24, 0x30	; 48
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	2c 87       	std	Y+12, r18	; 0x0c
     f14:	53 d0       	rcall	.+166    	; 0xfbc <fputc>
     f16:	2c 85       	ldd	r18, Y+12	; 0x0c
     f18:	22 ff       	sbrs	r18, 2
     f1a:	16 c0       	rjmp	.+44     	; 0xf48 <vfprintf+0x33e>
     f1c:	21 ff       	sbrs	r18, 1
     f1e:	03 c0       	rjmp	.+6      	; 0xf26 <vfprintf+0x31c>
     f20:	88 e5       	ldi	r24, 0x58	; 88
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	02 c0       	rjmp	.+4      	; 0xf2a <vfprintf+0x320>
     f26:	88 e7       	ldi	r24, 0x78	; 120
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	b7 01       	movw	r22, r14
     f2c:	0c c0       	rjmp	.+24     	; 0xf46 <vfprintf+0x33c>
     f2e:	82 2f       	mov	r24, r18
     f30:	86 78       	andi	r24, 0x86	; 134
     f32:	51 f0       	breq	.+20     	; 0xf48 <vfprintf+0x33e>
     f34:	21 fd       	sbrc	r18, 1
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <vfprintf+0x332>
     f38:	80 e2       	ldi	r24, 0x20	; 32
     f3a:	01 c0       	rjmp	.+2      	; 0xf3e <vfprintf+0x334>
     f3c:	8b e2       	ldi	r24, 0x2B	; 43
     f3e:	27 fd       	sbrc	r18, 7
     f40:	8d e2       	ldi	r24, 0x2D	; 45
     f42:	b7 01       	movw	r22, r14
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	3a d0       	rcall	.+116    	; 0xfbc <fputc>
     f48:	a5 14       	cp	r10, r5
     f4a:	30 f4       	brcc	.+12     	; 0xf58 <vfprintf+0x34e>
     f4c:	b7 01       	movw	r22, r14
     f4e:	80 e3       	ldi	r24, 0x30	; 48
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	34 d0       	rcall	.+104    	; 0xfbc <fputc>
     f54:	5a 94       	dec	r5
     f56:	f8 cf       	rjmp	.-16     	; 0xf48 <vfprintf+0x33e>
     f58:	aa 94       	dec	r10
     f5a:	f4 01       	movw	r30, r8
     f5c:	ea 0d       	add	r30, r10
     f5e:	f1 1d       	adc	r31, r1
     f60:	80 81       	ld	r24, Z
     f62:	b7 01       	movw	r22, r14
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	2a d0       	rcall	.+84     	; 0xfbc <fputc>
     f68:	a1 10       	cpse	r10, r1
     f6a:	f6 cf       	rjmp	.-20     	; 0xf58 <vfprintf+0x34e>
     f6c:	33 20       	and	r3, r3
     f6e:	09 f4       	brne	.+2      	; 0xf72 <vfprintf+0x368>
     f70:	5d ce       	rjmp	.-838    	; 0xc2c <vfprintf+0x22>
     f72:	b7 01       	movw	r22, r14
     f74:	80 e2       	ldi	r24, 0x20	; 32
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	21 d0       	rcall	.+66     	; 0xfbc <fputc>
     f7a:	3a 94       	dec	r3
     f7c:	f7 cf       	rjmp	.-18     	; 0xf6c <vfprintf+0x362>
     f7e:	f7 01       	movw	r30, r14
     f80:	86 81       	ldd	r24, Z+6	; 0x06
     f82:	97 81       	ldd	r25, Z+7	; 0x07
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <vfprintf+0x380>
     f86:	8f ef       	ldi	r24, 0xFF	; 255
     f88:	9f ef       	ldi	r25, 0xFF	; 255
     f8a:	2c 96       	adiw	r28, 0x0c	; 12
     f8c:	e2 e1       	ldi	r30, 0x12	; 18
     f8e:	c2 c0       	rjmp	.+388    	; 0x1114 <__epilogue_restores__>

00000f90 <strnlen_P>:
     f90:	fc 01       	movw	r30, r24
     f92:	05 90       	lpm	r0, Z+
     f94:	61 50       	subi	r22, 0x01	; 1
     f96:	70 40       	sbci	r23, 0x00	; 0
     f98:	01 10       	cpse	r0, r1
     f9a:	d8 f7       	brcc	.-10     	; 0xf92 <strnlen_P+0x2>
     f9c:	80 95       	com	r24
     f9e:	90 95       	com	r25
     fa0:	8e 0f       	add	r24, r30
     fa2:	9f 1f       	adc	r25, r31
     fa4:	08 95       	ret

00000fa6 <strnlen>:
     fa6:	fc 01       	movw	r30, r24
     fa8:	61 50       	subi	r22, 0x01	; 1
     faa:	70 40       	sbci	r23, 0x00	; 0
     fac:	01 90       	ld	r0, Z+
     fae:	01 10       	cpse	r0, r1
     fb0:	d8 f7       	brcc	.-10     	; 0xfa8 <strnlen+0x2>
     fb2:	80 95       	com	r24
     fb4:	90 95       	com	r25
     fb6:	8e 0f       	add	r24, r30
     fb8:	9f 1f       	adc	r25, r31
     fba:	08 95       	ret

00000fbc <fputc>:
     fbc:	0f 93       	push	r16
     fbe:	1f 93       	push	r17
     fc0:	cf 93       	push	r28
     fc2:	df 93       	push	r29
     fc4:	18 2f       	mov	r17, r24
     fc6:	09 2f       	mov	r16, r25
     fc8:	eb 01       	movw	r28, r22
     fca:	8b 81       	ldd	r24, Y+3	; 0x03
     fcc:	81 fd       	sbrc	r24, 1
     fce:	03 c0       	rjmp	.+6      	; 0xfd6 <fputc+0x1a>
     fd0:	8f ef       	ldi	r24, 0xFF	; 255
     fd2:	9f ef       	ldi	r25, 0xFF	; 255
     fd4:	20 c0       	rjmp	.+64     	; 0x1016 <fputc+0x5a>
     fd6:	82 ff       	sbrs	r24, 2
     fd8:	10 c0       	rjmp	.+32     	; 0xffa <fputc+0x3e>
     fda:	4e 81       	ldd	r20, Y+6	; 0x06
     fdc:	5f 81       	ldd	r21, Y+7	; 0x07
     fde:	2c 81       	ldd	r18, Y+4	; 0x04
     fe0:	3d 81       	ldd	r19, Y+5	; 0x05
     fe2:	42 17       	cp	r20, r18
     fe4:	53 07       	cpc	r21, r19
     fe6:	7c f4       	brge	.+30     	; 0x1006 <fputc+0x4a>
     fe8:	e8 81       	ld	r30, Y
     fea:	f9 81       	ldd	r31, Y+1	; 0x01
     fec:	9f 01       	movw	r18, r30
     fee:	2f 5f       	subi	r18, 0xFF	; 255
     ff0:	3f 4f       	sbci	r19, 0xFF	; 255
     ff2:	39 83       	std	Y+1, r19	; 0x01
     ff4:	28 83       	st	Y, r18
     ff6:	10 83       	st	Z, r17
     ff8:	06 c0       	rjmp	.+12     	; 0x1006 <fputc+0x4a>
     ffa:	e8 85       	ldd	r30, Y+8	; 0x08
     ffc:	f9 85       	ldd	r31, Y+9	; 0x09
     ffe:	81 2f       	mov	r24, r17
    1000:	09 95       	icall
    1002:	89 2b       	or	r24, r25
    1004:	29 f7       	brne	.-54     	; 0xfd0 <fputc+0x14>
    1006:	2e 81       	ldd	r18, Y+6	; 0x06
    1008:	3f 81       	ldd	r19, Y+7	; 0x07
    100a:	2f 5f       	subi	r18, 0xFF	; 255
    100c:	3f 4f       	sbci	r19, 0xFF	; 255
    100e:	3f 83       	std	Y+7, r19	; 0x07
    1010:	2e 83       	std	Y+6, r18	; 0x06
    1012:	81 2f       	mov	r24, r17
    1014:	90 2f       	mov	r25, r16
    1016:	df 91       	pop	r29
    1018:	cf 91       	pop	r28
    101a:	1f 91       	pop	r17
    101c:	0f 91       	pop	r16
    101e:	08 95       	ret

00001020 <__ultoa_invert>:
    1020:	fa 01       	movw	r30, r20
    1022:	aa 27       	eor	r26, r26
    1024:	28 30       	cpi	r18, 0x08	; 8
    1026:	51 f1       	breq	.+84     	; 0x107c <__ultoa_invert+0x5c>
    1028:	20 31       	cpi	r18, 0x10	; 16
    102a:	81 f1       	breq	.+96     	; 0x108c <__ultoa_invert+0x6c>
    102c:	e8 94       	clt
    102e:	6f 93       	push	r22
    1030:	6e 7f       	andi	r22, 0xFE	; 254
    1032:	6e 5f       	subi	r22, 0xFE	; 254
    1034:	7f 4f       	sbci	r23, 0xFF	; 255
    1036:	8f 4f       	sbci	r24, 0xFF	; 255
    1038:	9f 4f       	sbci	r25, 0xFF	; 255
    103a:	af 4f       	sbci	r26, 0xFF	; 255
    103c:	b1 e0       	ldi	r27, 0x01	; 1
    103e:	3e d0       	rcall	.+124    	; 0x10bc <__ultoa_invert+0x9c>
    1040:	b4 e0       	ldi	r27, 0x04	; 4
    1042:	3c d0       	rcall	.+120    	; 0x10bc <__ultoa_invert+0x9c>
    1044:	67 0f       	add	r22, r23
    1046:	78 1f       	adc	r23, r24
    1048:	89 1f       	adc	r24, r25
    104a:	9a 1f       	adc	r25, r26
    104c:	a1 1d       	adc	r26, r1
    104e:	68 0f       	add	r22, r24
    1050:	79 1f       	adc	r23, r25
    1052:	8a 1f       	adc	r24, r26
    1054:	91 1d       	adc	r25, r1
    1056:	a1 1d       	adc	r26, r1
    1058:	6a 0f       	add	r22, r26
    105a:	71 1d       	adc	r23, r1
    105c:	81 1d       	adc	r24, r1
    105e:	91 1d       	adc	r25, r1
    1060:	a1 1d       	adc	r26, r1
    1062:	20 d0       	rcall	.+64     	; 0x10a4 <__ultoa_invert+0x84>
    1064:	09 f4       	brne	.+2      	; 0x1068 <__ultoa_invert+0x48>
    1066:	68 94       	set
    1068:	3f 91       	pop	r19
    106a:	2a e0       	ldi	r18, 0x0A	; 10
    106c:	26 9f       	mul	r18, r22
    106e:	11 24       	eor	r1, r1
    1070:	30 19       	sub	r19, r0
    1072:	30 5d       	subi	r19, 0xD0	; 208
    1074:	31 93       	st	Z+, r19
    1076:	de f6       	brtc	.-74     	; 0x102e <__ultoa_invert+0xe>
    1078:	cf 01       	movw	r24, r30
    107a:	08 95       	ret
    107c:	46 2f       	mov	r20, r22
    107e:	47 70       	andi	r20, 0x07	; 7
    1080:	40 5d       	subi	r20, 0xD0	; 208
    1082:	41 93       	st	Z+, r20
    1084:	b3 e0       	ldi	r27, 0x03	; 3
    1086:	0f d0       	rcall	.+30     	; 0x10a6 <__ultoa_invert+0x86>
    1088:	c9 f7       	brne	.-14     	; 0x107c <__ultoa_invert+0x5c>
    108a:	f6 cf       	rjmp	.-20     	; 0x1078 <__ultoa_invert+0x58>
    108c:	46 2f       	mov	r20, r22
    108e:	4f 70       	andi	r20, 0x0F	; 15
    1090:	40 5d       	subi	r20, 0xD0	; 208
    1092:	4a 33       	cpi	r20, 0x3A	; 58
    1094:	18 f0       	brcs	.+6      	; 0x109c <__ultoa_invert+0x7c>
    1096:	49 5d       	subi	r20, 0xD9	; 217
    1098:	31 fd       	sbrc	r19, 1
    109a:	40 52       	subi	r20, 0x20	; 32
    109c:	41 93       	st	Z+, r20
    109e:	02 d0       	rcall	.+4      	; 0x10a4 <__ultoa_invert+0x84>
    10a0:	a9 f7       	brne	.-22     	; 0x108c <__ultoa_invert+0x6c>
    10a2:	ea cf       	rjmp	.-44     	; 0x1078 <__ultoa_invert+0x58>
    10a4:	b4 e0       	ldi	r27, 0x04	; 4
    10a6:	a6 95       	lsr	r26
    10a8:	97 95       	ror	r25
    10aa:	87 95       	ror	r24
    10ac:	77 95       	ror	r23
    10ae:	67 95       	ror	r22
    10b0:	ba 95       	dec	r27
    10b2:	c9 f7       	brne	.-14     	; 0x10a6 <__ultoa_invert+0x86>
    10b4:	00 97       	sbiw	r24, 0x00	; 0
    10b6:	61 05       	cpc	r22, r1
    10b8:	71 05       	cpc	r23, r1
    10ba:	08 95       	ret
    10bc:	9b 01       	movw	r18, r22
    10be:	ac 01       	movw	r20, r24
    10c0:	0a 2e       	mov	r0, r26
    10c2:	06 94       	lsr	r0
    10c4:	57 95       	ror	r21
    10c6:	47 95       	ror	r20
    10c8:	37 95       	ror	r19
    10ca:	27 95       	ror	r18
    10cc:	ba 95       	dec	r27
    10ce:	c9 f7       	brne	.-14     	; 0x10c2 <__ultoa_invert+0xa2>
    10d0:	62 0f       	add	r22, r18
    10d2:	73 1f       	adc	r23, r19
    10d4:	84 1f       	adc	r24, r20
    10d6:	95 1f       	adc	r25, r21
    10d8:	a0 1d       	adc	r26, r0
    10da:	08 95       	ret

000010dc <__prologue_saves__>:
    10dc:	2f 92       	push	r2
    10de:	3f 92       	push	r3
    10e0:	4f 92       	push	r4
    10e2:	5f 92       	push	r5
    10e4:	6f 92       	push	r6
    10e6:	7f 92       	push	r7
    10e8:	8f 92       	push	r8
    10ea:	9f 92       	push	r9
    10ec:	af 92       	push	r10
    10ee:	bf 92       	push	r11
    10f0:	cf 92       	push	r12
    10f2:	df 92       	push	r13
    10f4:	ef 92       	push	r14
    10f6:	ff 92       	push	r15
    10f8:	0f 93       	push	r16
    10fa:	1f 93       	push	r17
    10fc:	cf 93       	push	r28
    10fe:	df 93       	push	r29
    1100:	cd b7       	in	r28, 0x3d	; 61
    1102:	de b7       	in	r29, 0x3e	; 62
    1104:	ca 1b       	sub	r28, r26
    1106:	db 0b       	sbc	r29, r27
    1108:	0f b6       	in	r0, 0x3f	; 63
    110a:	f8 94       	cli
    110c:	de bf       	out	0x3e, r29	; 62
    110e:	0f be       	out	0x3f, r0	; 63
    1110:	cd bf       	out	0x3d, r28	; 61
    1112:	09 94       	ijmp

00001114 <__epilogue_restores__>:
    1114:	2a 88       	ldd	r2, Y+18	; 0x12
    1116:	39 88       	ldd	r3, Y+17	; 0x11
    1118:	48 88       	ldd	r4, Y+16	; 0x10
    111a:	5f 84       	ldd	r5, Y+15	; 0x0f
    111c:	6e 84       	ldd	r6, Y+14	; 0x0e
    111e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1120:	8c 84       	ldd	r8, Y+12	; 0x0c
    1122:	9b 84       	ldd	r9, Y+11	; 0x0b
    1124:	aa 84       	ldd	r10, Y+10	; 0x0a
    1126:	b9 84       	ldd	r11, Y+9	; 0x09
    1128:	c8 84       	ldd	r12, Y+8	; 0x08
    112a:	df 80       	ldd	r13, Y+7	; 0x07
    112c:	ee 80       	ldd	r14, Y+6	; 0x06
    112e:	fd 80       	ldd	r15, Y+5	; 0x05
    1130:	0c 81       	ldd	r16, Y+4	; 0x04
    1132:	1b 81       	ldd	r17, Y+3	; 0x03
    1134:	aa 81       	ldd	r26, Y+2	; 0x02
    1136:	b9 81       	ldd	r27, Y+1	; 0x01
    1138:	ce 0f       	add	r28, r30
    113a:	d1 1d       	adc	r29, r1
    113c:	0f b6       	in	r0, 0x3f	; 63
    113e:	f8 94       	cli
    1140:	de bf       	out	0x3e, r29	; 62
    1142:	0f be       	out	0x3f, r0	; 63
    1144:	cd bf       	out	0x3d, r28	; 61
    1146:	ed 01       	movw	r28, r26
    1148:	08 95       	ret

0000114a <_exit>:
    114a:	f8 94       	cli

0000114c <__stop_program>:
    114c:	ff cf       	rjmp	.-2      	; 0x114c <__stop_program>
